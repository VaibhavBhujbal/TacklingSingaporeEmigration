<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.18.0627.2230                               -->
<workbook original-version='18.1' source-build='2018.2.0 (20182.18.0627.2230)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <SortTagCleanup />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='all'>
      <format attr='font-family' value='Century Gothic' />
    </style-rule>
  </style>
  <datasources>
    <datasource caption='DimCostOfLiving+ (singaporeemigration) (2)' inline='true' name='federated.12qqtqq0l3z092120zjco0pg2hq9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='.' name='sqlserver.1pvtgas09av6j319tptvi0skjpxi'>
            <connection authentication='sspi' class='sqlserver' dbname='singaporeemigration' odbc-native-protocol='yes' one-time-sql='' server='.' />
          </named-connection>
        </named-connections>
        <relation join='full' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[FactMaster].[HumanDevID]' />
              <expression op='[DimHumanDev].[HumanDevID]' />
            </expression>
          </clause>
          <relation join='full' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[FactMaster].[TimeID]' />
                <expression op='[DimTime].[TimeId]' />
              </expression>
            </clause>
            <relation join='full' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[FactMaster].[HappinessID]' />
                  <expression op='[DimHappiness].[HappinessID]' />
                </expression>
              </clause>
              <relation join='full' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[FactMaster].[EconomyID]' />
                    <expression op='[DimEconomy].[EconomyId]' />
                  </expression>
                </clause>
                <relation join='full' type='join'>
                  <clause type='join'>
                    <expression op='='>
                      <expression op='[FactMaster].[CountryID]' />
                      <expression op='[DimCountry].[CountryId]' />
                    </expression>
                  </clause>
                  <relation join='full' type='join'>
                    <clause type='join'>
                      <expression op='='>
                        <expression op='[FactMaster].[CostID]' />
                        <expression op='[DimCostOfLiving].[CostID]' />
                      </expression>
                    </clause>
                    <relation join='full' type='join'>
                      <clause type='join'>
                        <expression op='='>
                          <expression op='[FactMaster].[CountryInfoId]' />
                          <expression op='[DimCountryInfo].[CountryInfoId]' />
                        </expression>
                      </clause>
                      <relation connection='sqlserver.1pvtgas09av6j319tptvi0skjpxi' name='FactMaster' table='[dbo].[FactMaster]' type='table' />
                      <relation connection='sqlserver.1pvtgas09av6j319tptvi0skjpxi' name='DimCountryInfo' table='[dbo].[DimCountryInfo]' type='table' />
                    </relation>
                    <relation connection='sqlserver.1pvtgas09av6j319tptvi0skjpxi' name='DimCostOfLiving' table='[dbo].[DimCostOfLiving]' type='table' />
                  </relation>
                  <relation connection='sqlserver.1pvtgas09av6j319tptvi0skjpxi' name='DimCountry' table='[dbo].[DimCountry]' type='table' />
                </relation>
                <relation connection='sqlserver.1pvtgas09av6j319tptvi0skjpxi' name='DimEconomy' table='[dbo].[DimEconomy]' type='table' />
              </relation>
              <relation connection='sqlserver.1pvtgas09av6j319tptvi0skjpxi' name='DimHappiness' table='[dbo].[DimHappiness]' type='table' />
            </relation>
            <relation connection='sqlserver.1pvtgas09av6j319tptvi0skjpxi' name='DimTime' table='[dbo].[DimTime]' type='table' />
          </relation>
          <relation connection='sqlserver.1pvtgas09av6j319tptvi0skjpxi' name='DimHumanDev' table='[dbo].[DimHumanDev]' type='table' />
        </relation>
        <cols>
          <map key='[AggregatedIndex]' value='[FactMaster].[AggregatedIndex]' />
          <map key='[AverageSalary]' value='[DimEconomy].[AverageSalary]' />
          <map key='[CostID (DimCostOfLiving)]' value='[DimCostOfLiving].[CostID]' />
          <map key='[CostID]' value='[FactMaster].[CostID]' />
          <map key='[CostOfLivingIndex]' value='[DimCostOfLiving].[CostOfLivingIndex]' />
          <map key='[CountryID]' value='[FactMaster].[CountryID]' />
          <map key='[CountryId]' value='[DimCountry].[CountryId]' />
          <map key='[CountryInfoId (DimCountryInfo)]' value='[DimCountryInfo].[CountryInfoId]' />
          <map key='[CountryInfoId]' value='[FactMaster].[CountryInfoId]' />
          <map key='[CountryName]' value='[DimCountry].[CountryName]' />
          <map key='[EconomyID]' value='[FactMaster].[EconomyID]' />
          <map key='[EconomyId]' value='[DimEconomy].[EconomyId]' />
          <map key='[EducationID]' value='[FactMaster].[EducationID]' />
          <map key='[FactID]' value='[FactMaster].[FactID]' />
          <map key='[FreedomLifeChoiceIndex]' value='[DimHappiness].[FreedomLifeChoiceIndex]' />
          <map key='[GDPPerCapita]' value='[DimHappiness].[GDPPerCapita]' />
          <map key='[GenerosityIndex]' value='[DimHappiness].[GenerosityIndex]' />
          <map key='[GroceriesIndex]' value='[DimCostOfLiving].[GroceriesIndex]' />
          <map key='[HappinessID (DimHappiness)]' value='[DimHappiness].[HappinessID]' />
          <map key='[HappinessID]' value='[FactMaster].[HappinessID]' />
          <map key='[HappinessIndex]' value='[DimHappiness].[HappinessIndex]' />
          <map key='[HealthLifeExpectancyIndex]' value='[DimHappiness].[HealthLifeExpectancyIndex]' />
          <map key='[HumanDevID (DimHumanDev)]' value='[DimHumanDev].[HumanDevID]' />
          <map key='[HumanDevID]' value='[FactMaster].[HumanDevID]' />
          <map key='[HumanDevIndex]' value='[DimHumanDev].[HumanDevIndex]' />
          <map key='[LocalPurchasingPowerIndex]' value='[DimCostOfLiving].[LocalPurchasingPowerIndex]' />
          <map key='[MigrationID]' value='[FactMaster].[MigrationID]' />
          <map key='[Month]' value='[DimTime].[Month]' />
          <map key='[PerceptionOfCorruptionIndex]' value='[DimHappiness].[PerceptionOfCorruptionIndex]' />
          <map key='[PurchasingPowerIndex]' value='[DimEconomy].[PurchasingPowerIndex]' />
          <map key='[RentIndex]' value='[DimCostOfLiving].[RentIndex]' />
          <map key='[RestaurantPriceIndex]' value='[DimCostOfLiving].[RestaurantPriceIndex]' />
          <map key='[SocialSupportIndex]' value='[DimHappiness].[SocialSupportIndex]' />
          <map key='[TimeID]' value='[FactMaster].[TimeID]' />
          <map key='[TimeId]' value='[DimTime].[TimeId]' />
          <map key='[UnemploymentRate]' value='[DimEconomy].[UnemploymentRate]' />
          <map key='[Year]' value='[DimTime].[Year]' />
          <map key='[countryid (DimCostOfLiving)]' value='[DimCostOfLiving].[countryid]' />
          <map key='[countryid (DimEconomy)]' value='[DimEconomy].[countryid]' />
          <map key='[countryid (DimHappiness)]' value='[DimHappiness].[countryid]' />
          <map key='[countryid (DimHumanDev)]' value='[DimHumanDev].[countryid]' />
          <map key='[countryid]' value='[DimCountryInfo].[countryid]' />
          <map key='[pop_density]' value='[DimCountryInfo].[pop_density]' />
          <map key='[temperature]' value='[DimCountryInfo].[temperature]' />
          <map key='[timeid (DimCostOfLiving)]' value='[DimCostOfLiving].[timeid]' />
          <map key='[timeid (DimEconomy)]' value='[DimEconomy].[timeid]' />
          <map key='[timeid (DimHappiness)]' value='[DimHappiness].[timeid]' />
          <map key='[timeid (DimHumanDev)]' value='[DimHumanDev].[timeid]' />
          <map key='[timeid]' value='[DimCountryInfo].[timeid]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>FactID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[FactID]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>FactID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[CountryID]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>CountryID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TimeID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[TimeID]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>TimeID</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CostID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[CostID]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>CostID</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EducationID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[EducationID]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>EducationID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EconomyID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[EconomyID]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>EconomyID</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HappinessID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[HappinessID]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>HappinessID</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MigrationID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[MigrationID]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>MigrationID</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AggregatedIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[AggregatedIndex]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>AggregatedIndex</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryInfoId</remote-name>
            <remote-type>3</remote-type>
            <local-name>[CountryInfoId]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>CountryInfoId</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HumanDevID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[HumanDevID]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>HumanDevID</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryInfoId</remote-name>
            <remote-type>3</remote-type>
            <local-name>[CountryInfoId (DimCountryInfo)]</local-name>
            <parent-name>[DimCountryInfo]</parent-name>
            <remote-alias>CountryInfoId</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temperature</remote-name>
            <remote-type>4</remote-type>
            <local-name>[temperature]</local-name>
            <parent-name>[DimCountryInfo]</parent-name>
            <remote-alias>temperature</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pop_density</remote-name>
            <remote-type>4</remote-type>
            <local-name>[pop_density]</local-name>
            <parent-name>[DimCountryInfo]</parent-name>
            <remote-alias>pop_density</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[timeid]</local-name>
            <parent-name>[DimCountryInfo]</parent-name>
            <remote-alias>timeid</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countryid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[countryid]</local-name>
            <parent-name>[DimCountryInfo]</parent-name>
            <remote-alias>countryid</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CostID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[CostID (DimCostOfLiving)]</local-name>
            <parent-name>[DimCostOfLiving]</parent-name>
            <remote-alias>CostID</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CostOfLivingIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[CostOfLivingIndex]</local-name>
            <parent-name>[DimCostOfLiving]</parent-name>
            <remote-alias>CostOfLivingIndex</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RentIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[RentIndex]</local-name>
            <parent-name>[DimCostOfLiving]</parent-name>
            <remote-alias>RentIndex</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GroceriesIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[GroceriesIndex]</local-name>
            <parent-name>[DimCostOfLiving]</parent-name>
            <remote-alias>GroceriesIndex</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RestaurantPriceIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[RestaurantPriceIndex]</local-name>
            <parent-name>[DimCostOfLiving]</parent-name>
            <remote-alias>RestaurantPriceIndex</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalPurchasingPowerIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[LocalPurchasingPowerIndex]</local-name>
            <parent-name>[DimCostOfLiving]</parent-name>
            <remote-alias>LocalPurchasingPowerIndex</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countryid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[countryid (DimCostOfLiving)]</local-name>
            <parent-name>[DimCostOfLiving]</parent-name>
            <remote-alias>countryid</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[timeid (DimCostOfLiving)]</local-name>
            <parent-name>[DimCostOfLiving]</parent-name>
            <remote-alias>timeid</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryId</remote-name>
            <remote-type>3</remote-type>
            <local-name>[CountryId]</local-name>
            <parent-name>[DimCountry]</parent-name>
            <remote-alias>CountryId</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CountryName]</local-name>
            <parent-name>[DimCountry]</parent-name>
            <remote-alias>CountryName</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EconomyId</remote-name>
            <remote-type>3</remote-type>
            <local-name>[EconomyId]</local-name>
            <parent-name>[DimEconomy]</parent-name>
            <remote-alias>EconomyId</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UnemploymentRate</remote-name>
            <remote-type>4</remote-type>
            <local-name>[UnemploymentRate]</local-name>
            <parent-name>[DimEconomy]</parent-name>
            <remote-alias>UnemploymentRate</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PurchasingPowerIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[PurchasingPowerIndex]</local-name>
            <parent-name>[DimEconomy]</parent-name>
            <remote-alias>PurchasingPowerIndex</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageSalary</remote-name>
            <remote-type>4</remote-type>
            <local-name>[AverageSalary]</local-name>
            <parent-name>[DimEconomy]</parent-name>
            <remote-alias>AverageSalary</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countryid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[countryid (DimEconomy)]</local-name>
            <parent-name>[DimEconomy]</parent-name>
            <remote-alias>countryid</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[timeid (DimEconomy)]</local-name>
            <parent-name>[DimEconomy]</parent-name>
            <remote-alias>timeid</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HappinessID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[HappinessID (DimHappiness)]</local-name>
            <parent-name>[DimHappiness]</parent-name>
            <remote-alias>HappinessID</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HappinessIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[HappinessIndex]</local-name>
            <parent-name>[DimHappiness]</parent-name>
            <remote-alias>HappinessIndex</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDPPerCapita</remote-name>
            <remote-type>4</remote-type>
            <local-name>[GDPPerCapita]</local-name>
            <parent-name>[DimHappiness]</parent-name>
            <remote-alias>GDPPerCapita</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SocialSupportIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[SocialSupportIndex]</local-name>
            <parent-name>[DimHappiness]</parent-name>
            <remote-alias>SocialSupportIndex</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HealthLifeExpectancyIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[HealthLifeExpectancyIndex]</local-name>
            <parent-name>[DimHappiness]</parent-name>
            <remote-alias>HealthLifeExpectancyIndex</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FreedomLifeChoiceIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[FreedomLifeChoiceIndex]</local-name>
            <parent-name>[DimHappiness]</parent-name>
            <remote-alias>FreedomLifeChoiceIndex</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GenerosityIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[GenerosityIndex]</local-name>
            <parent-name>[DimHappiness]</parent-name>
            <remote-alias>GenerosityIndex</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PerceptionOfCorruptionIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[PerceptionOfCorruptionIndex]</local-name>
            <parent-name>[DimHappiness]</parent-name>
            <remote-alias>PerceptionOfCorruptionIndex</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countryid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[countryid (DimHappiness)]</local-name>
            <parent-name>[DimHappiness]</parent-name>
            <remote-alias>countryid</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[timeid (DimHappiness)]</local-name>
            <parent-name>[DimHappiness]</parent-name>
            <remote-alias>timeid</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TimeId</remote-name>
            <remote-type>3</remote-type>
            <local-name>[TimeId]</local-name>
            <parent-name>[DimTime]</parent-name>
            <remote-alias>TimeId</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[DimTime]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[DimTime]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HumanDevID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[HumanDevID (DimHumanDev)]</local-name>
            <parent-name>[DimHumanDev]</parent-name>
            <remote-alias>HumanDevID</remote-alias>
            <ordinal>53</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HumanDevIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[HumanDevIndex]</local-name>
            <parent-name>[DimHumanDev]</parent-name>
            <remote-alias>HumanDevIndex</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countryid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[countryid (DimHumanDev)]</local-name>
            <parent-name>[DimHumanDev]</parent-name>
            <remote-alias>countryid</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[timeid (DimHumanDev)]</local-name>
            <parent-name>[DimHumanDev]</parent-name>
            <remote-alias>timeid</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Aggregated Index' datatype='real' name='[AggregatedIndex]' role='measure' type='quantitative' />
      <column caption='Average Salary' datatype='real' name='[AverageSalary]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[CostID (DimCostOfLiving)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Cost ID' datatype='integer' name='[CostID]' role='dimension' type='ordinal' />
      <column caption='Cost Of Living Index' datatype='real' name='[CostOfLivingIndex]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Country ID' datatype='integer' name='[CountryID]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Country Id' datatype='integer' name='[CountryId]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[CountryInfoId (DimCountryInfo)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Country Info Id' datatype='integer' name='[CountryInfoId]' role='dimension' type='ordinal' />
      <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' caption='Economy ID' datatype='integer' name='[EconomyID]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Economy Id' datatype='integer' name='[EconomyId]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Education ID' datatype='integer' name='[EducationID]' role='dimension' type='ordinal' />
      <column caption='Fact ID' datatype='integer' name='[FactID]' role='dimension' type='ordinal' />
      <column caption='Freedom Life Choice Index' datatype='real' name='[FreedomLifeChoiceIndex]' role='measure' type='quantitative' />
      <column caption='GDP Per Capita' datatype='real' name='[GDPPerCapita]' role='measure' type='quantitative' />
      <column caption='Generosity Index' datatype='real' name='[GenerosityIndex]' role='measure' type='quantitative' />
      <column caption='Groceries Index' datatype='real' name='[GroceriesIndex]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[HappinessID (DimHappiness)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Happiness ID' datatype='integer' name='[HappinessID]' role='dimension' type='ordinal' />
      <column caption='Happiness Index' datatype='real' name='[HappinessIndex]' role='measure' type='quantitative' />
      <column caption='Health Life Expectancy Index' datatype='real' name='[HealthLifeExpectancyIndex]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[HumanDevID (DimHumanDev)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[HumanDevID]' role='dimension' type='ordinal' />
      <column caption='Human Dev Index' datatype='real' name='[HumanDevIndex]' role='measure' type='quantitative' />
      <column caption='Local Purchasing Power Index' datatype='real' name='[LocalPurchasingPowerIndex]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Migration ID' datatype='integer' name='[MigrationID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Perception Of Corruption Index' datatype='real' name='[PerceptionOfCorruptionIndex]' role='measure' type='quantitative' />
      <column caption='Purchasing Power Index' datatype='real' name='[PurchasingPowerIndex]' role='measure' type='quantitative' />
      <column caption='Rent Index' datatype='real' name='[RentIndex]' role='measure' type='quantitative' />
      <column caption='Restaurant Price Index' datatype='real' name='[RestaurantPriceIndex]' role='measure' type='quantitative' />
      <column caption='Social Support Index' datatype='real' name='[SocialSupportIndex]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Time ID' datatype='integer' name='[TimeID]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Time Id' datatype='integer' name='[TimeId]' role='dimension' type='ordinal' />
      <column caption='Unemployment Rate' datatype='real' name='[UnemploymentRate]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='Countryid' datatype='integer' name='[countryid]' role='measure' type='quantitative' />
      <column caption='Pop Density' datatype='real' name='[pop_density]' role='measure' type='quantitative' />
      <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative' />
      <column caption='Timeid' datatype='integer' name='[timeid]' role='measure' type='quantitative' />
      <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.461538' measure-ordering='alphabetic' measure-percentage='0.538462' rowDisplayCount='1000' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:CountryName:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia &amp; Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Israel and the Occupied Territories&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Myanmar/Burma&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Korea, Democratic Republic of (North Korea)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Vincents &amp; Grenadines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Republic of Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turks &amp; Caicos Islands&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slovak Republic (Slovakia)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kyrgyz Republic (Kyrgyzstan)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Virgin Islands (US)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ivory Coast (Cote d Ivoire)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Korea, Republic of (South Korea)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pacific Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moldova, Republic of&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Timor Leste&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua &amp; Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Trinidad &amp; Tobago&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Virgin Islands (UK)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
    <datasource caption='Sheet1 (SurveyResponsesForInfographics)' inline='true' name='federated.0y8so6k01t65dm1bs7xxp0cemvkt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SurveyResponsesForInfographics' name='excel-direct.0hbdfox1p6bv9l18novsc1ti7630'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='X:/TacklingSingaporeEmigration/tableau/infographics_data/SurveyResponsesForInfographics.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0hbdfox1p6bv9l18novsc1ti7630' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:F6:no:A1:F6:0' header='yes' outcome='6'>
            <column datatype='string' name='Age range' ordinal='0' />
            <column datatype='integer' name='No' ordinal='1' />
            <column datatype='integer' name='Unsure' ordinal='2' />
            <column datatype='integer' name='Yes' ordinal='3' />
            <column datatype='integer' name='Grand Total' ordinal='4' />
            <column datatype='real' name='Yes_of_total_yes' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Age range</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Age range]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Age range</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No</remote-name>
            <remote-type>20</remote-type>
            <local-name>[No]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>No</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unsure</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unsure]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Unsure</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Yes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Yes]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Yes</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Grand Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Grand Total]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Grand Total</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Yes_of_total_yes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Yes_of_total_yes]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Yes_of_total_yes</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F6:no:A1:F6:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.431551' measure-ordering='alphabetic' measure-percentage='0.568448' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='OverseasSingaporeans (singaporeemigration)' inline='true' name='federated.0oy6exl0ybhpfo1g7hkxg1hh519k' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='.' name='sqlserver.1jj0csp1lk78te17ifx991tetfie'>
            <connection authentication='sspi' class='sqlserver' dbname='singaporeemigration' odbc-native-protocol='yes' one-time-sql='' server='.' />
          </named-connection>
        </named-connections>
        <relation connection='sqlserver.1jj0csp1lk78te17ifx991tetfie' name='OverseasSingaporeans' table='[dbo].[OverseasSingaporeans]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[OverseasSingaporeans]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Singaporeans Overseas</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Singaporeans Overseas]</local-name>
            <parent-name>[OverseasSingaporeans]</parent-name>
            <remote-alias>Singaporeans Overseas</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.48631' measure-ordering='alphabetic' measure-percentage='0.51369' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Emigration Numbers' inline='true' name='federated.0tmz6wh1rcir141esh4ij1706oac' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='.' name='sqlserver.15ffwo40rsd6in15obuky1sk86tz'>
            <connection authentication='sspi' class='sqlserver' dbname='singaporeemigration' odbc-native-protocol='yes' one-time-sql='' server='.' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[FactMaster].[TimeID]' />
              <expression op='[DimTime].[TimeId]' />
            </expression>
          </clause>
          <relation join='full' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[FactMaster].[MigrationID]' />
                <expression op='[DimMigration].[MigrationID]' />
              </expression>
            </clause>
            <relation join='full' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[FactMaster].[CountryID]' />
                  <expression op='[DimCountry].[CountryId]' />
                </expression>
              </clause>
              <relation connection='sqlserver.15ffwo40rsd6in15obuky1sk86tz' name='FactMaster' table='[dbo].[FactMaster]' type='table' />
              <relation connection='sqlserver.15ffwo40rsd6in15obuky1sk86tz' name='DimCountry' table='[dbo].[DimCountry]' type='table' />
            </relation>
            <relation connection='sqlserver.15ffwo40rsd6in15obuky1sk86tz' name='DimMigration' table='[dbo].[DimMigration]' type='table' />
          </relation>
          <relation connection='sqlserver.15ffwo40rsd6in15obuky1sk86tz' name='DimTime' table='[dbo].[DimTime]' type='table' />
        </relation>
        <cols>
          <map key='[AggregatedIndex]' value='[FactMaster].[AggregatedIndex]' />
          <map key='[CostID]' value='[FactMaster].[CostID]' />
          <map key='[CountryID]' value='[FactMaster].[CountryID]' />
          <map key='[CountryId]' value='[DimCountry].[CountryId]' />
          <map key='[CountryInfoId]' value='[FactMaster].[CountryInfoId]' />
          <map key='[CountryName]' value='[DimCountry].[CountryName]' />
          <map key='[EconomyID]' value='[FactMaster].[EconomyID]' />
          <map key='[EducationID]' value='[FactMaster].[EducationID]' />
          <map key='[EmigrationNum]' value='[DimMigration].[EmigrationNum]' />
          <map key='[FactID]' value='[FactMaster].[FactID]' />
          <map key='[HappinessID]' value='[FactMaster].[HappinessID]' />
          <map key='[HumanDevID]' value='[FactMaster].[HumanDevID]' />
          <map key='[MigrationID (DimMigration)]' value='[DimMigration].[MigrationID]' />
          <map key='[MigrationID]' value='[FactMaster].[MigrationID]' />
          <map key='[Month]' value='[DimTime].[Month]' />
          <map key='[TimeID]' value='[FactMaster].[TimeID]' />
          <map key='[TimeId]' value='[DimTime].[TimeId]' />
          <map key='[Year]' value='[DimTime].[Year]' />
          <map key='[countryid]' value='[DimMigration].[countryid]' />
          <map key='[timeid]' value='[DimMigration].[timeid]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>FactID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[FactID]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>FactID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[CountryID]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>CountryID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TimeID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[TimeID]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>TimeID</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CostID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[CostID]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>CostID</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EducationID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[EducationID]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>EducationID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EconomyID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[EconomyID]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>EconomyID</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HappinessID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[HappinessID]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>HappinessID</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MigrationID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[MigrationID]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>MigrationID</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AggregatedIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[AggregatedIndex]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>AggregatedIndex</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryInfoId</remote-name>
            <remote-type>3</remote-type>
            <local-name>[CountryInfoId]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>CountryInfoId</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HumanDevID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[HumanDevID]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>HumanDevID</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryId</remote-name>
            <remote-type>3</remote-type>
            <local-name>[CountryId]</local-name>
            <parent-name>[DimCountry]</parent-name>
            <remote-alias>CountryId</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CountryName]</local-name>
            <parent-name>[DimCountry]</parent-name>
            <remote-alias>CountryName</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MigrationID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[MigrationID (DimMigration)]</local-name>
            <parent-name>[DimMigration]</parent-name>
            <remote-alias>MigrationID</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EmigrationNum</remote-name>
            <remote-type>4</remote-type>
            <local-name>[EmigrationNum]</local-name>
            <parent-name>[DimMigration]</parent-name>
            <remote-alias>EmigrationNum</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countryid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[countryid]</local-name>
            <parent-name>[DimMigration]</parent-name>
            <remote-alias>countryid</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[timeid]</local-name>
            <parent-name>[DimMigration]</parent-name>
            <remote-alias>timeid</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TimeId</remote-name>
            <remote-type>3</remote-type>
            <local-name>[TimeId]</local-name>
            <parent-name>[DimTime]</parent-name>
            <remote-alias>TimeId</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[DimTime]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[DimTime]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Aggregated Index' datatype='real' name='[AggregatedIndex]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Cost ID' datatype='integer' name='[CostID]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Country ID' datatype='integer' name='[CountryID]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Country Id' datatype='integer' name='[CountryId]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Country Info Id' datatype='integer' name='[CountryInfoId]' role='dimension' type='ordinal' />
      <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' caption='Economy ID' datatype='integer' name='[EconomyID]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Education ID' datatype='integer' name='[EducationID]' role='dimension' type='ordinal' />
      <column caption='Emigration Num' datatype='real' name='[EmigrationNum]' role='dimension' type='ordinal' />
      <column caption='Fact ID' datatype='integer' name='[FactID]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Happiness ID' datatype='integer' name='[HappinessID]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[HumanDevID]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[MigrationID (DimMigration)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Migration ID' datatype='integer' name='[MigrationID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='Time ID' datatype='integer' name='[TimeID]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Time Id' datatype='integer' name='[TimeId]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='Countryid' datatype='integer' name='[countryid]' role='measure' type='quantitative' />
      <column caption='Timeid' datatype='integer' name='[timeid]' role='measure' type='quantitative' />
      <column-instance column='[CountryName]' derivation='Attribute' name='[attr:CountryName:nk]' pivot='key' type='nominal' />
      <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.673858' measure-ordering='alphabetic' measure-percentage='0.326142' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:CountryName:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:CountryName:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
    <datasource caption='DimCostOfLiving+ (singaporeemigration) (2) (2)' inline='true' name='federated.12qqtqq0l3z092120zjco0pg2hq9 (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='.' name='sqlserver.1pvtgas09av6j319tptvi0skjpxi (copy)'>
            <connection authentication='sspi' class='sqlserver' dbname='singaporeemigration' odbc-native-protocol='yes' one-time-sql='' server='.' />
          </named-connection>
        </named-connections>
        <relation join='full' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[FactMaster].[HumanDevID]' />
              <expression op='[DimHumanDev].[HumanDevID]' />
            </expression>
          </clause>
          <relation join='full' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[FactMaster].[TimeID]' />
                <expression op='[DimTime].[TimeId]' />
              </expression>
            </clause>
            <relation join='full' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[FactMaster].[HappinessID]' />
                  <expression op='[DimHappiness].[HappinessID]' />
                </expression>
              </clause>
              <relation join='full' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[FactMaster].[EconomyID]' />
                    <expression op='[DimEconomy].[EconomyId]' />
                  </expression>
                </clause>
                <relation join='full' type='join'>
                  <clause type='join'>
                    <expression op='='>
                      <expression op='[FactMaster].[CountryID]' />
                      <expression op='[DimCountry].[CountryId]' />
                    </expression>
                  </clause>
                  <relation join='full' type='join'>
                    <clause type='join'>
                      <expression op='='>
                        <expression op='[FactMaster].[CostID]' />
                        <expression op='[DimCostOfLiving].[CostID]' />
                      </expression>
                    </clause>
                    <relation join='full' type='join'>
                      <clause type='join'>
                        <expression op='='>
                          <expression op='[FactMaster].[CountryInfoId]' />
                          <expression op='[DimCountryInfo].[CountryInfoId]' />
                        </expression>
                      </clause>
                      <relation connection='sqlserver.1pvtgas09av6j319tptvi0skjpxi (copy)' name='FactMaster' table='[dbo].[FactMaster]' type='table' />
                      <relation connection='sqlserver.1pvtgas09av6j319tptvi0skjpxi (copy)' name='DimCountryInfo' table='[dbo].[DimCountryInfo]' type='table' />
                    </relation>
                    <relation connection='sqlserver.1pvtgas09av6j319tptvi0skjpxi (copy)' name='DimCostOfLiving' table='[dbo].[DimCostOfLiving]' type='table' />
                  </relation>
                  <relation connection='sqlserver.1pvtgas09av6j319tptvi0skjpxi (copy)' name='DimCountry' table='[dbo].[DimCountry]' type='table' />
                </relation>
                <relation connection='sqlserver.1pvtgas09av6j319tptvi0skjpxi (copy)' name='DimEconomy' table='[dbo].[DimEconomy]' type='table' />
              </relation>
              <relation connection='sqlserver.1pvtgas09av6j319tptvi0skjpxi (copy)' name='DimHappiness' table='[dbo].[DimHappiness]' type='table' />
            </relation>
            <relation connection='sqlserver.1pvtgas09av6j319tptvi0skjpxi (copy)' name='DimTime' table='[dbo].[DimTime]' type='table' />
          </relation>
          <relation connection='sqlserver.1pvtgas09av6j319tptvi0skjpxi (copy)' name='DimHumanDev' table='[dbo].[DimHumanDev]' type='table' />
        </relation>
        <cols>
          <map key='[AggregatedIndex]' value='[FactMaster].[AggregatedIndex]' />
          <map key='[AverageSalary]' value='[DimEconomy].[AverageSalary]' />
          <map key='[CostID (DimCostOfLiving)]' value='[DimCostOfLiving].[CostID]' />
          <map key='[CostID]' value='[FactMaster].[CostID]' />
          <map key='[CostOfLivingIndex]' value='[DimCostOfLiving].[CostOfLivingIndex]' />
          <map key='[CountryID]' value='[FactMaster].[CountryID]' />
          <map key='[CountryId]' value='[DimCountry].[CountryId]' />
          <map key='[CountryInfoId (DimCountryInfo)]' value='[DimCountryInfo].[CountryInfoId]' />
          <map key='[CountryInfoId]' value='[FactMaster].[CountryInfoId]' />
          <map key='[CountryName]' value='[DimCountry].[CountryName]' />
          <map key='[EconomyID]' value='[FactMaster].[EconomyID]' />
          <map key='[EconomyId]' value='[DimEconomy].[EconomyId]' />
          <map key='[EducationID]' value='[FactMaster].[EducationID]' />
          <map key='[FactID]' value='[FactMaster].[FactID]' />
          <map key='[FreedomLifeChoiceIndex]' value='[DimHappiness].[FreedomLifeChoiceIndex]' />
          <map key='[GDPPerCapita]' value='[DimHappiness].[GDPPerCapita]' />
          <map key='[GenerosityIndex]' value='[DimHappiness].[GenerosityIndex]' />
          <map key='[GroceriesIndex]' value='[DimCostOfLiving].[GroceriesIndex]' />
          <map key='[HappinessID (DimHappiness)]' value='[DimHappiness].[HappinessID]' />
          <map key='[HappinessID]' value='[FactMaster].[HappinessID]' />
          <map key='[HappinessIndex]' value='[DimHappiness].[HappinessIndex]' />
          <map key='[HealthLifeExpectancyIndex]' value='[DimHappiness].[HealthLifeExpectancyIndex]' />
          <map key='[HumanDevID (DimHumanDev)]' value='[DimHumanDev].[HumanDevID]' />
          <map key='[HumanDevID]' value='[FactMaster].[HumanDevID]' />
          <map key='[HumanDevIndex]' value='[DimHumanDev].[HumanDevIndex]' />
          <map key='[LocalPurchasingPowerIndex]' value='[DimCostOfLiving].[LocalPurchasingPowerIndex]' />
          <map key='[MigrationID]' value='[FactMaster].[MigrationID]' />
          <map key='[Month]' value='[DimTime].[Month]' />
          <map key='[PerceptionOfCorruptionIndex]' value='[DimHappiness].[PerceptionOfCorruptionIndex]' />
          <map key='[PurchasingPowerIndex]' value='[DimEconomy].[PurchasingPowerIndex]' />
          <map key='[RentIndex]' value='[DimCostOfLiving].[RentIndex]' />
          <map key='[RestaurantPriceIndex]' value='[DimCostOfLiving].[RestaurantPriceIndex]' />
          <map key='[SocialSupportIndex]' value='[DimHappiness].[SocialSupportIndex]' />
          <map key='[TimeID]' value='[FactMaster].[TimeID]' />
          <map key='[TimeId]' value='[DimTime].[TimeId]' />
          <map key='[UnemploymentRate]' value='[DimEconomy].[UnemploymentRate]' />
          <map key='[Year]' value='[DimTime].[Year]' />
          <map key='[countryid (DimCostOfLiving)]' value='[DimCostOfLiving].[countryid]' />
          <map key='[countryid (DimEconomy)]' value='[DimEconomy].[countryid]' />
          <map key='[countryid (DimHappiness)]' value='[DimHappiness].[countryid]' />
          <map key='[countryid (DimHumanDev)]' value='[DimHumanDev].[countryid]' />
          <map key='[countryid]' value='[DimCountryInfo].[countryid]' />
          <map key='[pop_density]' value='[DimCountryInfo].[pop_density]' />
          <map key='[temperature]' value='[DimCountryInfo].[temperature]' />
          <map key='[timeid (DimCostOfLiving)]' value='[DimCostOfLiving].[timeid]' />
          <map key='[timeid (DimEconomy)]' value='[DimEconomy].[timeid]' />
          <map key='[timeid (DimHappiness)]' value='[DimHappiness].[timeid]' />
          <map key='[timeid (DimHumanDev)]' value='[DimHumanDev].[timeid]' />
          <map key='[timeid]' value='[DimCountryInfo].[timeid]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>FactID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[FactID]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>FactID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[CountryID]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>CountryID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TimeID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[TimeID]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>TimeID</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CostID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[CostID]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>CostID</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EducationID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[EducationID]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>EducationID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EconomyID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[EconomyID]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>EconomyID</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HappinessID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[HappinessID]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>HappinessID</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MigrationID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[MigrationID]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>MigrationID</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AggregatedIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[AggregatedIndex]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>AggregatedIndex</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryInfoId</remote-name>
            <remote-type>3</remote-type>
            <local-name>[CountryInfoId]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>CountryInfoId</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HumanDevID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[HumanDevID]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>HumanDevID</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryInfoId</remote-name>
            <remote-type>3</remote-type>
            <local-name>[CountryInfoId (DimCountryInfo)]</local-name>
            <parent-name>[DimCountryInfo]</parent-name>
            <remote-alias>CountryInfoId</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temperature</remote-name>
            <remote-type>4</remote-type>
            <local-name>[temperature]</local-name>
            <parent-name>[DimCountryInfo]</parent-name>
            <remote-alias>temperature</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pop_density</remote-name>
            <remote-type>4</remote-type>
            <local-name>[pop_density]</local-name>
            <parent-name>[DimCountryInfo]</parent-name>
            <remote-alias>pop_density</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[timeid]</local-name>
            <parent-name>[DimCountryInfo]</parent-name>
            <remote-alias>timeid</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countryid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[countryid]</local-name>
            <parent-name>[DimCountryInfo]</parent-name>
            <remote-alias>countryid</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CostID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[CostID (DimCostOfLiving)]</local-name>
            <parent-name>[DimCostOfLiving]</parent-name>
            <remote-alias>CostID</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CostOfLivingIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[CostOfLivingIndex]</local-name>
            <parent-name>[DimCostOfLiving]</parent-name>
            <remote-alias>CostOfLivingIndex</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RentIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[RentIndex]</local-name>
            <parent-name>[DimCostOfLiving]</parent-name>
            <remote-alias>RentIndex</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GroceriesIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[GroceriesIndex]</local-name>
            <parent-name>[DimCostOfLiving]</parent-name>
            <remote-alias>GroceriesIndex</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RestaurantPriceIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[RestaurantPriceIndex]</local-name>
            <parent-name>[DimCostOfLiving]</parent-name>
            <remote-alias>RestaurantPriceIndex</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalPurchasingPowerIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[LocalPurchasingPowerIndex]</local-name>
            <parent-name>[DimCostOfLiving]</parent-name>
            <remote-alias>LocalPurchasingPowerIndex</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countryid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[countryid (DimCostOfLiving)]</local-name>
            <parent-name>[DimCostOfLiving]</parent-name>
            <remote-alias>countryid</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[timeid (DimCostOfLiving)]</local-name>
            <parent-name>[DimCostOfLiving]</parent-name>
            <remote-alias>timeid</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryId</remote-name>
            <remote-type>3</remote-type>
            <local-name>[CountryId]</local-name>
            <parent-name>[DimCountry]</parent-name>
            <remote-alias>CountryId</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CountryName]</local-name>
            <parent-name>[DimCountry]</parent-name>
            <remote-alias>CountryName</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EconomyId</remote-name>
            <remote-type>3</remote-type>
            <local-name>[EconomyId]</local-name>
            <parent-name>[DimEconomy]</parent-name>
            <remote-alias>EconomyId</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UnemploymentRate</remote-name>
            <remote-type>4</remote-type>
            <local-name>[UnemploymentRate]</local-name>
            <parent-name>[DimEconomy]</parent-name>
            <remote-alias>UnemploymentRate</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PurchasingPowerIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[PurchasingPowerIndex]</local-name>
            <parent-name>[DimEconomy]</parent-name>
            <remote-alias>PurchasingPowerIndex</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageSalary</remote-name>
            <remote-type>4</remote-type>
            <local-name>[AverageSalary]</local-name>
            <parent-name>[DimEconomy]</parent-name>
            <remote-alias>AverageSalary</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countryid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[countryid (DimEconomy)]</local-name>
            <parent-name>[DimEconomy]</parent-name>
            <remote-alias>countryid</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[timeid (DimEconomy)]</local-name>
            <parent-name>[DimEconomy]</parent-name>
            <remote-alias>timeid</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HappinessID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[HappinessID (DimHappiness)]</local-name>
            <parent-name>[DimHappiness]</parent-name>
            <remote-alias>HappinessID</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HappinessIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[HappinessIndex]</local-name>
            <parent-name>[DimHappiness]</parent-name>
            <remote-alias>HappinessIndex</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDPPerCapita</remote-name>
            <remote-type>4</remote-type>
            <local-name>[GDPPerCapita]</local-name>
            <parent-name>[DimHappiness]</parent-name>
            <remote-alias>GDPPerCapita</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SocialSupportIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[SocialSupportIndex]</local-name>
            <parent-name>[DimHappiness]</parent-name>
            <remote-alias>SocialSupportIndex</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HealthLifeExpectancyIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[HealthLifeExpectancyIndex]</local-name>
            <parent-name>[DimHappiness]</parent-name>
            <remote-alias>HealthLifeExpectancyIndex</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FreedomLifeChoiceIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[FreedomLifeChoiceIndex]</local-name>
            <parent-name>[DimHappiness]</parent-name>
            <remote-alias>FreedomLifeChoiceIndex</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GenerosityIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[GenerosityIndex]</local-name>
            <parent-name>[DimHappiness]</parent-name>
            <remote-alias>GenerosityIndex</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PerceptionOfCorruptionIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[PerceptionOfCorruptionIndex]</local-name>
            <parent-name>[DimHappiness]</parent-name>
            <remote-alias>PerceptionOfCorruptionIndex</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countryid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[countryid (DimHappiness)]</local-name>
            <parent-name>[DimHappiness]</parent-name>
            <remote-alias>countryid</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[timeid (DimHappiness)]</local-name>
            <parent-name>[DimHappiness]</parent-name>
            <remote-alias>timeid</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TimeId</remote-name>
            <remote-type>3</remote-type>
            <local-name>[TimeId]</local-name>
            <parent-name>[DimTime]</parent-name>
            <remote-alias>TimeId</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[DimTime]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[DimTime]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HumanDevID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[HumanDevID (DimHumanDev)]</local-name>
            <parent-name>[DimHumanDev]</parent-name>
            <remote-alias>HumanDevID</remote-alias>
            <ordinal>53</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HumanDevIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[HumanDevIndex]</local-name>
            <parent-name>[DimHumanDev]</parent-name>
            <remote-alias>HumanDevIndex</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countryid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[countryid (DimHumanDev)]</local-name>
            <parent-name>[DimHumanDev]</parent-name>
            <remote-alias>countryid</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[timeid (DimHumanDev)]</local-name>
            <parent-name>[DimHumanDev]</parent-name>
            <remote-alias>timeid</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Aggregated Index' datatype='real' name='[AggregatedIndex]' role='measure' type='quantitative' />
      <column caption='Average Salary' datatype='real' name='[AverageSalary]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[CostID (DimCostOfLiving)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Cost ID' datatype='integer' name='[CostID]' role='dimension' type='ordinal' />
      <column caption='Cost Of Living Index' datatype='real' name='[CostOfLivingIndex]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Country ID' datatype='integer' name='[CountryID]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Country Id' datatype='integer' name='[CountryId]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[CountryInfoId (DimCountryInfo)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Country Info Id' datatype='integer' name='[CountryInfoId]' role='dimension' type='ordinal' />
      <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' caption='Economy ID' datatype='integer' name='[EconomyID]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Economy Id' datatype='integer' name='[EconomyId]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Education ID' datatype='integer' name='[EducationID]' role='dimension' type='ordinal' />
      <column caption='Fact ID' datatype='integer' name='[FactID]' role='dimension' type='ordinal' />
      <column caption='Freedom Life Choice Index' datatype='real' name='[FreedomLifeChoiceIndex]' role='measure' type='quantitative' />
      <column caption='GDP Per Capita' datatype='real' name='[GDPPerCapita]' role='measure' type='quantitative' />
      <column caption='Generosity Index' datatype='real' name='[GenerosityIndex]' role='measure' type='quantitative' />
      <column caption='Groceries Index' datatype='real' name='[GroceriesIndex]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[HappinessID (DimHappiness)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Happiness ID' datatype='integer' name='[HappinessID]' role='dimension' type='ordinal' />
      <column caption='Happiness Index' datatype='real' name='[HappinessIndex]' role='measure' type='quantitative' />
      <column caption='Health Life Expectancy Index' datatype='real' name='[HealthLifeExpectancyIndex]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[HumanDevID (DimHumanDev)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[HumanDevID]' role='dimension' type='ordinal' />
      <column caption='Human Dev Index' datatype='real' name='[HumanDevIndex]' role='measure' type='quantitative' />
      <column caption='Local Purchasing Power Index' datatype='real' name='[LocalPurchasingPowerIndex]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Migration ID' datatype='integer' name='[MigrationID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Perception Of Corruption Index' datatype='real' name='[PerceptionOfCorruptionIndex]' role='measure' type='quantitative' />
      <column caption='Purchasing Power Index' datatype='real' name='[PurchasingPowerIndex]' role='measure' type='quantitative' />
      <column caption='Rent Index' datatype='real' name='[RentIndex]' role='measure' type='quantitative' />
      <column caption='Restaurant Price Index' datatype='real' name='[RestaurantPriceIndex]' role='measure' type='quantitative' />
      <column caption='Social Support Index' datatype='real' name='[SocialSupportIndex]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Time ID' datatype='integer' name='[TimeID]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Time Id' datatype='integer' name='[TimeId]' role='dimension' type='ordinal' />
      <column caption='Unemployment Rate' datatype='real' name='[UnemploymentRate]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='Countryid' datatype='integer' name='[countryid]' role='measure' type='quantitative' />
      <column caption='Pop Density' datatype='real' name='[pop_density]' role='measure' type='quantitative' />
      <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative' />
      <column caption='Timeid' datatype='integer' name='[timeid]' role='measure' type='quantitative' />
      <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Country Name,Year)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:CountryName:nk]' />
          <groupfilter function='level-members' level='[none:Year:qk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.411168' measure-ordering='alphabetic' measure-percentage='0.588832' rowDisplayCount='1000' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:CountryName:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia &amp; Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Israel and the Occupied Territories&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Myanmar/Burma&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Korea, Democratic Republic of (North Korea)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Vincents &amp; Grenadines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Republic of Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turks &amp; Caicos Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slovak Republic (Slovakia)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kyrgyz Republic (Kyrgyzstan)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Virgin Islands (US)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ivory Coast (Cote d Ivoire)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Korea, Republic of (South Korea)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pacific Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moldova, Republic of&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Timor Leste&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua &amp; Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Trinidad &amp; Tobago&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Virgin Islands (UK)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='PushFactors (SingaporeEmigration)' inline='true' name='federated.10fs5bm157diiu18ao75e0d7pa3j' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='DESKTOP-H152642\MSSQLSERVER01' name='sqlserver.0beuyxd0hdsdqw1h6xjo80gi67n1'>
            <connection authentication='sspi' class='sqlserver' dbname='SingaporeEmigration' odbc-native-protocol='yes' one-time-sql='' server='.' />
          </named-connection>
        </named-connections>
        <relation connection='sqlserver.0beuyxd0hdsdqw1h6xjo80gi67n1' name='PushFactors' table='[dbo].[PushFactors]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>PushID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[PushID]</local-name>
            <parent-name>[PushFactors]</parent-name>
            <remote-alias>PushID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PushFactor</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PushFactor]</local-name>
            <parent-name>[PushFactors]</parent-name>
            <remote-alias>PushFactor</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>60</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalResponses</remote-name>
            <remote-type>3</remote-type>
            <local-name>[TotalResponses]</local-name>
            <parent-name>[PushFactors]</parent-name>
            <remote-alias>TotalResponses</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatioWithTotal</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RatioWithTotal]</local-name>
            <parent-name>[PushFactors]</parent-name>
            <remote-alias>RatioWithTotal</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Push Factor' datatype='string' name='[PushFactor]' role='dimension' type='nominal' />
      <column caption='Push ID' datatype='integer' name='[PushID]' role='dimension' type='ordinal' />
      <column caption='Ratio With Total' datatype='real' name='[RatioWithTotal]' role='measure' type='quantitative' />
      <column caption='Total Responses' datatype='integer' name='[TotalResponses]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.48731' measure-ordering='alphabetic' measure-percentage='0.51269' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='DimCostOfLiving+ (singaporeemigration)' inline='true' name='federated.0c58i2x0fz2by618pa53y0jj5iaf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='.' name='sqlserver.1g7l8ek1r18svj17fg92a08e8rgq'>
            <connection authentication='sspi' class='sqlserver' dbname='singaporeemigration' odbc-native-protocol='yes' one-time-sql='' server='.' />
          </named-connection>
        </named-connections>
        <relation join='full' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[FactMaster].[CountryID]' />
              <expression op='[DimCountry].[CountryId]' />
            </expression>
          </clause>
          <relation join='full' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[FactMaster].[TimeID]' />
                <expression op='[DimTime].[TimeId]' />
              </expression>
            </clause>
            <relation join='full' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[FactMaster].[MigrationID]' />
                  <expression op='[DimMigration].[MigrationID]' />
                </expression>
              </clause>
              <relation join='full' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[FactMaster].[HappinessID]' />
                    <expression op='[DimHappiness].[HappinessID]' />
                  </expression>
                </clause>
                <relation join='full' type='join'>
                  <clause type='join'>
                    <expression op='='>
                      <expression op='[FactMaster].[EconomyID]' />
                      <expression op='[DimEconomy].[EconomyId]' />
                    </expression>
                  </clause>
                  <relation join='full' type='join'>
                    <clause type='join'>
                      <expression op='='>
                        <expression op='[DimCostOfLiving].[CostID]' />
                        <expression op='[FactMaster].[CostID]' />
                      </expression>
                    </clause>
                    <relation connection='sqlserver.1g7l8ek1r18svj17fg92a08e8rgq' name='DimCostOfLiving' table='[dbo].[DimCostOfLiving]' type='table' />
                    <relation connection='sqlserver.1g7l8ek1r18svj17fg92a08e8rgq' name='FactMaster' table='[dbo].[FactMaster]' type='table' />
                  </relation>
                  <relation connection='sqlserver.1g7l8ek1r18svj17fg92a08e8rgq' name='DimEconomy' table='[dbo].[DimEconomy]' type='table' />
                </relation>
                <relation connection='sqlserver.1g7l8ek1r18svj17fg92a08e8rgq' name='DimHappiness' table='[dbo].[DimHappiness]' type='table' />
              </relation>
              <relation connection='sqlserver.1g7l8ek1r18svj17fg92a08e8rgq' name='DimMigration' table='[dbo].[DimMigration]' type='table' />
            </relation>
            <relation connection='sqlserver.1g7l8ek1r18svj17fg92a08e8rgq' name='DimTime' table='[dbo].[DimTime]' type='table' />
          </relation>
          <relation connection='sqlserver.1g7l8ek1r18svj17fg92a08e8rgq' name='DimCountry' table='[dbo].[DimCountry]' type='table' />
        </relation>
        <cols>
          <map key='[AggregatedIndex]' value='[FactMaster].[AggregatedIndex]' />
          <map key='[AverageSalary]' value='[DimEconomy].[AverageSalary]' />
          <map key='[CostID (FactMaster)]' value='[FactMaster].[CostID]' />
          <map key='[CostID]' value='[DimCostOfLiving].[CostID]' />
          <map key='[CostOfLivingIndex]' value='[DimCostOfLiving].[CostOfLivingIndex]' />
          <map key='[CountryID]' value='[FactMaster].[CountryID]' />
          <map key='[CountryId]' value='[DimCountry].[CountryId]' />
          <map key='[CountryInfoId]' value='[FactMaster].[CountryInfoId]' />
          <map key='[CountryName]' value='[DimCountry].[CountryName]' />
          <map key='[EconomyID]' value='[FactMaster].[EconomyID]' />
          <map key='[EconomyId]' value='[DimEconomy].[EconomyId]' />
          <map key='[EducationID]' value='[FactMaster].[EducationID]' />
          <map key='[EmigrationNum]' value='[DimMigration].[EmigrationNum]' />
          <map key='[FactID]' value='[FactMaster].[FactID]' />
          <map key='[FreedomLifeChoiceIndex]' value='[DimHappiness].[FreedomLifeChoiceIndex]' />
          <map key='[GDPPerCapita]' value='[DimHappiness].[GDPPerCapita]' />
          <map key='[GenerosityIndex]' value='[DimHappiness].[GenerosityIndex]' />
          <map key='[GroceriesIndex]' value='[DimCostOfLiving].[GroceriesIndex]' />
          <map key='[HappinessID (DimHappiness)]' value='[DimHappiness].[HappinessID]' />
          <map key='[HappinessID]' value='[FactMaster].[HappinessID]' />
          <map key='[HappinessIndex]' value='[DimHappiness].[HappinessIndex]' />
          <map key='[HealthLifeExpectancyIndex]' value='[DimHappiness].[HealthLifeExpectancyIndex]' />
          <map key='[HumanDevID]' value='[FactMaster].[HumanDevID]' />
          <map key='[LocalPurchasingPowerIndex]' value='[DimCostOfLiving].[LocalPurchasingPowerIndex]' />
          <map key='[MigrationID (DimMigration)]' value='[DimMigration].[MigrationID]' />
          <map key='[MigrationID]' value='[FactMaster].[MigrationID]' />
          <map key='[Month]' value='[DimTime].[Month]' />
          <map key='[PerceptionOfCorruptionIndex]' value='[DimHappiness].[PerceptionOfCorruptionIndex]' />
          <map key='[PurchasingPowerIndex]' value='[DimEconomy].[PurchasingPowerIndex]' />
          <map key='[RentIndex]' value='[DimCostOfLiving].[RentIndex]' />
          <map key='[RestaurantPriceIndex]' value='[DimCostOfLiving].[RestaurantPriceIndex]' />
          <map key='[SocialSupportIndex]' value='[DimHappiness].[SocialSupportIndex]' />
          <map key='[TimeID]' value='[FactMaster].[TimeID]' />
          <map key='[TimeId]' value='[DimTime].[TimeId]' />
          <map key='[UnemploymentRate]' value='[DimEconomy].[UnemploymentRate]' />
          <map key='[Year]' value='[DimTime].[Year]' />
          <map key='[countryid (DimEconomy)]' value='[DimEconomy].[countryid]' />
          <map key='[countryid (DimHappiness)]' value='[DimHappiness].[countryid]' />
          <map key='[countryid (DimMigration)]' value='[DimMigration].[countryid]' />
          <map key='[countryid]' value='[DimCostOfLiving].[countryid]' />
          <map key='[timeid (DimEconomy)]' value='[DimEconomy].[timeid]' />
          <map key='[timeid (DimHappiness)]' value='[DimHappiness].[timeid]' />
          <map key='[timeid (DimMigration)]' value='[DimMigration].[timeid]' />
          <map key='[timeid]' value='[DimCostOfLiving].[timeid]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>CostID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[CostID]</local-name>
            <parent-name>[DimCostOfLiving]</parent-name>
            <remote-alias>CostID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CostOfLivingIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[CostOfLivingIndex]</local-name>
            <parent-name>[DimCostOfLiving]</parent-name>
            <remote-alias>CostOfLivingIndex</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RentIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[RentIndex]</local-name>
            <parent-name>[DimCostOfLiving]</parent-name>
            <remote-alias>RentIndex</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GroceriesIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[GroceriesIndex]</local-name>
            <parent-name>[DimCostOfLiving]</parent-name>
            <remote-alias>GroceriesIndex</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RestaurantPriceIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[RestaurantPriceIndex]</local-name>
            <parent-name>[DimCostOfLiving]</parent-name>
            <remote-alias>RestaurantPriceIndex</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalPurchasingPowerIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[LocalPurchasingPowerIndex]</local-name>
            <parent-name>[DimCostOfLiving]</parent-name>
            <remote-alias>LocalPurchasingPowerIndex</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countryid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[countryid]</local-name>
            <parent-name>[DimCostOfLiving]</parent-name>
            <remote-alias>countryid</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[timeid]</local-name>
            <parent-name>[DimCostOfLiving]</parent-name>
            <remote-alias>timeid</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FactID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[FactID]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>FactID</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[CountryID]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>CountryID</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TimeID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[TimeID]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>TimeID</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CostID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[CostID (FactMaster)]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>CostID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EducationID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[EducationID]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>EducationID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EconomyID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[EconomyID]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>EconomyID</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HappinessID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[HappinessID]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>HappinessID</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MigrationID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[MigrationID]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>MigrationID</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AggregatedIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[AggregatedIndex]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>AggregatedIndex</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryInfoId</remote-name>
            <remote-type>3</remote-type>
            <local-name>[CountryInfoId]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>CountryInfoId</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HumanDevID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[HumanDevID]</local-name>
            <parent-name>[FactMaster]</parent-name>
            <remote-alias>HumanDevID</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EconomyId</remote-name>
            <remote-type>3</remote-type>
            <local-name>[EconomyId]</local-name>
            <parent-name>[DimEconomy]</parent-name>
            <remote-alias>EconomyId</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UnemploymentRate</remote-name>
            <remote-type>4</remote-type>
            <local-name>[UnemploymentRate]</local-name>
            <parent-name>[DimEconomy]</parent-name>
            <remote-alias>UnemploymentRate</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PurchasingPowerIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[PurchasingPowerIndex]</local-name>
            <parent-name>[DimEconomy]</parent-name>
            <remote-alias>PurchasingPowerIndex</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageSalary</remote-name>
            <remote-type>4</remote-type>
            <local-name>[AverageSalary]</local-name>
            <parent-name>[DimEconomy]</parent-name>
            <remote-alias>AverageSalary</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countryid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[countryid (DimEconomy)]</local-name>
            <parent-name>[DimEconomy]</parent-name>
            <remote-alias>countryid</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[timeid (DimEconomy)]</local-name>
            <parent-name>[DimEconomy]</parent-name>
            <remote-alias>timeid</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HappinessID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[HappinessID (DimHappiness)]</local-name>
            <parent-name>[DimHappiness]</parent-name>
            <remote-alias>HappinessID</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HappinessIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[HappinessIndex]</local-name>
            <parent-name>[DimHappiness]</parent-name>
            <remote-alias>HappinessIndex</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDPPerCapita</remote-name>
            <remote-type>4</remote-type>
            <local-name>[GDPPerCapita]</local-name>
            <parent-name>[DimHappiness]</parent-name>
            <remote-alias>GDPPerCapita</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SocialSupportIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[SocialSupportIndex]</local-name>
            <parent-name>[DimHappiness]</parent-name>
            <remote-alias>SocialSupportIndex</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HealthLifeExpectancyIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[HealthLifeExpectancyIndex]</local-name>
            <parent-name>[DimHappiness]</parent-name>
            <remote-alias>HealthLifeExpectancyIndex</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FreedomLifeChoiceIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[FreedomLifeChoiceIndex]</local-name>
            <parent-name>[DimHappiness]</parent-name>
            <remote-alias>FreedomLifeChoiceIndex</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GenerosityIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[GenerosityIndex]</local-name>
            <parent-name>[DimHappiness]</parent-name>
            <remote-alias>GenerosityIndex</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PerceptionOfCorruptionIndex</remote-name>
            <remote-type>4</remote-type>
            <local-name>[PerceptionOfCorruptionIndex]</local-name>
            <parent-name>[DimHappiness]</parent-name>
            <remote-alias>PerceptionOfCorruptionIndex</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countryid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[countryid (DimHappiness)]</local-name>
            <parent-name>[DimHappiness]</parent-name>
            <remote-alias>countryid</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[timeid (DimHappiness)]</local-name>
            <parent-name>[DimHappiness]</parent-name>
            <remote-alias>timeid</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MigrationID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[MigrationID (DimMigration)]</local-name>
            <parent-name>[DimMigration]</parent-name>
            <remote-alias>MigrationID</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EmigrationNum</remote-name>
            <remote-type>4</remote-type>
            <local-name>[EmigrationNum]</local-name>
            <parent-name>[DimMigration]</parent-name>
            <remote-alias>EmigrationNum</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countryid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[countryid (DimMigration)]</local-name>
            <parent-name>[DimMigration]</parent-name>
            <remote-alias>countryid</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[timeid (DimMigration)]</local-name>
            <parent-name>[DimMigration]</parent-name>
            <remote-alias>timeid</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TimeId</remote-name>
            <remote-type>3</remote-type>
            <local-name>[TimeId]</local-name>
            <parent-name>[DimTime]</parent-name>
            <remote-alias>TimeId</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[DimTime]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[DimTime]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryId</remote-name>
            <remote-type>3</remote-type>
            <local-name>[CountryId]</local-name>
            <parent-name>[DimCountry]</parent-name>
            <remote-alias>CountryId</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CountryName]</local-name>
            <parent-name>[DimCountry]</parent-name>
            <remote-alias>CountryName</remote-alias>
            <ordinal>50</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Aggregated Index' datatype='real' name='[AggregatedIndex]' role='measure' type='quantitative' />
      <column caption='Average Salary' datatype='real' name='[AverageSalary]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[CostID (FactMaster)]' role='dimension' type='ordinal' />
      <column caption='Cost ID' datatype='integer' name='[CostID]' role='dimension' type='ordinal' />
      <column caption='Cost Of Living Index' datatype='real' name='[CostOfLivingIndex]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Country ID' datatype='integer' name='[CountryID]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Country Id' datatype='integer' name='[CountryId]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Country Info Id' datatype='integer' name='[CountryInfoId]' role='dimension' type='ordinal' />
      <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' caption='Economy ID' datatype='integer' name='[EconomyID]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Economy Id' datatype='integer' name='[EconomyId]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Education ID' datatype='integer' name='[EducationID]' role='dimension' type='ordinal' />
      <column caption='Emigration Num' datatype='real' name='[EmigrationNum]' role='dimension' type='ordinal' />
      <column caption='Fact ID' datatype='integer' name='[FactID]' role='dimension' type='ordinal' />
      <column caption='Freedom Life Choice Index' datatype='real' name='[FreedomLifeChoiceIndex]' role='measure' type='quantitative' />
      <column caption='GDP Per Capita' datatype='real' name='[GDPPerCapita]' role='measure' type='quantitative' />
      <column caption='Generosity Index' datatype='real' name='[GenerosityIndex]' role='measure' type='quantitative' />
      <column caption='Groceries Index' datatype='real' name='[GroceriesIndex]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[HappinessID (DimHappiness)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Happiness ID' datatype='integer' name='[HappinessID]' role='dimension' type='ordinal' />
      <column caption='Happiness Index' datatype='real' name='[HappinessIndex]' role='measure' type='quantitative' />
      <column caption='Health Life Expectancy Index' datatype='real' name='[HealthLifeExpectancyIndex]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[HumanDevID]' role='dimension' type='ordinal' />
      <column caption='Local Purchasing Power Index' datatype='real' name='[LocalPurchasingPowerIndex]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[MigrationID (DimMigration)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Migration ID' datatype='integer' name='[MigrationID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Perception Of Corruption Index' datatype='real' name='[PerceptionOfCorruptionIndex]' role='measure' type='quantitative' />
      <column caption='Purchasing Power Index' datatype='real' name='[PurchasingPowerIndex]' role='measure' type='quantitative' />
      <column caption='Rent Index' datatype='real' name='[RentIndex]' role='measure' type='quantitative' />
      <column caption='Restaurant Price Index' datatype='real' name='[RestaurantPriceIndex]' role='measure' type='quantitative' />
      <column caption='Social Support Index' datatype='real' name='[SocialSupportIndex]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Time ID' datatype='integer' name='[TimeID]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Time Id' datatype='integer' name='[TimeId]' role='dimension' type='ordinal' />
      <column caption='Unemployment Rate' datatype='real' name='[UnemploymentRate]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='Countryid' datatype='integer' name='[countryid]' role='measure' type='quantitative' />
      <column caption='Timeid' datatype='integer' name='[timeid]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.466754' measure-ordering='alphabetic' measure-percentage='0.533246' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Professions_Percentage' inline='true' name='federated.1ww38l91u35sr319glkgr0ubtjcx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Professions_Percentage' name='textscan.1wrgkr21bbshfz18y9a200w5yfe0'>
            <connection class='textscan' directory='X:/TacklingSingaporeEmigration/tableau/infographics_data' filename='Professions_Percentage.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1wrgkr21bbshfz18y9a200w5yfe0' name='Professions_Percentage.csv' table='[Professions_Percentage#csv]' type='table'>
          <columns character-set='UTF-8' header='no' locale='en_SG' separator=','>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='string' name='F2' ordinal='1' />
            <column datatype='real' name='F3' ordinal='2' />
            <column datatype='integer' name='F4' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Professions_Percentage.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;false&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_SG&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Professions_Percentage.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F2]</local-name>
            <parent-name>[Professions_Percentage.csv]</parent-name>
            <remote-alias>F2</remote-alias>
            <ordinal>1</ordinal>
            <auto-hidden>true</auto-hidden>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F3</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F3]</local-name>
            <parent-name>[Professions_Percentage.csv]</parent-name>
            <remote-alias>F3</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F4</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F4]</local-name>
            <parent-name>[Professions_Percentage.csv]</parent-name>
            <remote-alias>F4</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Profession' datatype='string' name='[F1]' role='dimension' type='nominal' />
      <column caption='Percentage who want to migrate' datatype='real' name='[F3]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.48631' measure-ordering='alphabetic' measure-percentage='0.51369' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Cost of living'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cost of living index</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DimCostOfLiving+ (singaporeemigration) (2)' name='federated.12qqtqq0l3z092120zjco0pg2hq9' />
          </datasources>
          <datasource-dependencies datasource='federated.12qqtqq0l3z092120zjco0pg2hq9'>
            <column caption='Cost Of Living Index' datatype='real' name='[CostOfLivingIndex]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Country Id' datatype='integer' name='[CountryId]' role='dimension' type='ordinal' />
            <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[CountryId]' derivation='None' name='[none:CountryId:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CostOfLivingIndex]' derivation='Sum' name='[sum:CostOfLivingIndex:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:CountryId:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CountryId:ok]' member='1' />
              <groupfilter function='member' level='[none:CountryId:ok]' member='2' />
              <groupfilter function='member' level='[none:CountryId:ok]' member='3' />
              <groupfilter function='member' level='[none:CountryId:ok]' member='4' />
              <groupfilter function='member' level='[none:CountryId:ok]' member='5' />
              <groupfilter function='member' level='[none:CountryId:ok]' member='8' />
              <groupfilter function='member' level='[none:CountryId:ok]' member='9' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:Year:qk]' included-values='in-range'>
            <min>2015</min>
          </filter>
          <slices>
            <column>[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:CountryId:ok]</column>
            <column>[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:Year:qk]' field-type='quantitative' max='2018' min='2015' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.12qqtqq0l3z092120zjco0pg2hq9].[sum:CostOfLivingIndex:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.12qqtqq0l3z092120zjco0pg2hq9].[sum:CostOfLivingIndex:qk]' value='Century Gothic' />
            <format attr='font-family' field='[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:Year:qk]' value='Century Gothic' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:CountryName:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='selection' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12qqtqq0l3z092120zjco0pg2hq9].[sum:CostOfLivingIndex:qk]</rows>
        <cols>[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Desire to emigrate with age range'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Do you want to emigrate?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (SurveyResponsesForInfographics)' name='federated.0y8so6k01t65dm1bs7xxp0cemvkt' />
          </datasources>
          <datasource-dependencies datasource='federated.0y8so6k01t65dm1bs7xxp0cemvkt'>
            <column datatype='string' name='[Age range]' role='dimension' type='nominal' />
            <column datatype='real' name='[Yes_of_total_yes]' role='measure' type='quantitative' />
            <column-instance column='[Age range]' derivation='None' name='[none:Age range:nk]' pivot='key' type='nominal' />
            <column-instance column='[Yes_of_total_yes]' derivation='Sum' name='[sum:Yes_of_total_yes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0y8so6k01t65dm1bs7xxp0cemvkt].[none:Age range:nk]'>
            <groupfilter from='&quot;18 - 25&quot;' function='range' level='[none:Age range:nk]' to='&quot;45 and above&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0y8so6k01t65dm1bs7xxp0cemvkt].[none:Age range:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0y8so6k01t65dm1bs7xxp0cemvkt].[sum:Yes_of_total_yes:qk]' scope='cols' value='Percentage who want to migrate' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0y8so6k01t65dm1bs7xxp0cemvkt].[none:Age range:nk]</rows>
        <cols>[federated.0y8so6k01t65dm1bs7xxp0cemvkt].[sum:Yes_of_total_yes:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Emigration Numbers (sg)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Year-to-Year Cumulative Emigration Numbers (Singapore)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DimCostOfLiving+ (singaporeemigration)' name='federated.0c58i2x0fz2by618pa53y0jj5iaf' />
          </datasources>
          <datasource-dependencies datasource='federated.0c58i2x0fz2by618pa53y0jj5iaf'>
            <column caption='Emigration Num' datatype='real' name='[EmigrationNum]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EmigrationNum]' derivation='Sum' name='[sum:EmigrationNum:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0c58i2x0fz2by618pa53y0jj5iaf].[sum:EmigrationNum:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0c58i2x0fz2by618pa53y0jj5iaf].[sum:EmigrationNum:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0c58i2x0fz2by618pa53y0jj5iaf].[sum:EmigrationNum:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0c58i2x0fz2by618pa53y0jj5iaf].[sum:EmigrationNum:qk]</rows>
        <cols>[federated.0c58i2x0fz2by618pa53y0jj5iaf].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Emigration hotspots'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Popular countries for emigration</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Emigration Numbers' name='federated.0tmz6wh1rcir141esh4ij1706oac' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0tmz6wh1rcir141esh4ij1706oac'>
            <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Emigration Num' datatype='real' name='[EmigrationNum]' role='dimension' type='ordinal' />
            <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[EmigrationNum]' derivation='Sum' name='[sum:EmigrationNum:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0tmz6wh1rcir141esh4ij1706oac].[sum:EmigrationNum:qk]' included-values='in-range'>
            <min>50000.0</min>
            <max>329656.0</max>
          </filter>
          <slices>
            <column>[federated.0tmz6wh1rcir141esh4ij1706oac].[sum:EmigrationNum:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0tmz6wh1rcir141esh4ij1706oac].[sum:EmigrationNum:qk]' />
              <lod column='[federated.0tmz6wh1rcir141esh4ij1706oac].[none:CountryName:nk]' />
              <text column='[federated.0tmz6wh1rcir141esh4ij1706oac].[none:CountryName:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#75a1c7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tmz6wh1rcir141esh4ij1706oac].[Latitude (generated)]</rows>
        <cols>[federated.0tmz6wh1rcir141esh4ij1706oac].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Happiness Index'>
      <table>
        <view>
          <datasources>
            <datasource caption='DimCostOfLiving+ (singaporeemigration) (2) (2)' name='federated.12qqtqq0l3z092120zjco0pg2hq9 (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.12qqtqq0l3z092120zjco0pg2hq9 (copy)'>
            <column aggregation='Sum' caption='Country ID' datatype='integer' name='[CountryID]' role='dimension' type='ordinal' />
            <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Happiness Index' datatype='real' name='[HappinessIndex]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[HappinessIndex]' derivation='Avg' name='[avg:HappinessIndex:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CountryID]' derivation='None' name='[none:CountryID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[HappinessIndex]' derivation='Sum' name='[sum:HappinessIndex:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.12qqtqq0l3z092120zjco0pg2hq9 (copy)].[avg:HappinessIndex:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.12qqtqq0l3z092120zjco0pg2hq9 (copy)].[none:CountryID:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CountryID:ok]' member='1' />
              <groupfilter function='member' level='[none:CountryID:ok]' member='2' />
              <groupfilter function='member' level='[none:CountryID:ok]' member='3' />
              <groupfilter function='member' level='[none:CountryID:ok]' member='4' />
              <groupfilter function='member' level='[none:CountryID:ok]' member='5' />
              <groupfilter function='member' level='[none:CountryID:ok]' member='6' />
              <groupfilter function='member' level='[none:CountryID:ok]' member='8' />
              <groupfilter function='member' level='[none:CountryID:ok]' member='9' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.12qqtqq0l3z092120zjco0pg2hq9 (copy)].[none:Year:qk]' included-values='in-range'>
            <min>2015</min>
            <max>2018</max>
          </filter>
          <slices>
            <column>[federated.12qqtqq0l3z092120zjco0pg2hq9 (copy)].[none:CountryID:ok]</column>
            <column>[federated.12qqtqq0l3z092120zjco0pg2hq9 (copy)].[none:Year:qk]</column>
            <column>[federated.12qqtqq0l3z092120zjco0pg2hq9 (copy)].[avg:HappinessIndex:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.12qqtqq0l3z092120zjco0pg2hq9 (copy)].[none:Year:qk]' field-type='quantitative' max='2018' min='2015' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.12qqtqq0l3z092120zjco0pg2hq9 (copy)].[sum:HappinessIndex:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.12qqtqq0l3z092120zjco0pg2hq9 (copy)].[sum:HappinessIndex:qk]' field-type='quantitative' max='7.7910149358723269' min='4.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12qqtqq0l3z092120zjco0pg2hq9 (copy)].[none:CountryName:nk]' />
              <lod column='[federated.12qqtqq0l3z092120zjco0pg2hq9 (copy)].[none:CountryName:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d4d4d4' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12qqtqq0l3z092120zjco0pg2hq9 (copy)].[sum:HappinessIndex:qk]</rows>
        <cols>[federated.12qqtqq0l3z092120zjco0pg2hq9 (copy)].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Population density'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Over-crowding</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DimCostOfLiving+ (singaporeemigration) (2)' name='federated.12qqtqq0l3z092120zjco0pg2hq9' />
          </datasources>
          <datasource-dependencies datasource='federated.12qqtqq0l3z092120zjco0pg2hq9'>
            <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column caption='Pop Density' datatype='real' name='[pop_density]' role='measure' type='quantitative' />
            <column-instance column='[pop_density]' derivation='Sum' name='[sum:pop_density:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:CountryName:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:CountryName:nk]' direction='DESC' using='[federated.12qqtqq0l3z092120zjco0pg2hq9].[sum:pop_density:qk]' />
          <filter class='quantitative' column='[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:Year:qk]' included-values='in-range'>
            <min>2017</min>
            <max>2018</max>
          </filter>
          <slices>
            <column>[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:Year:qk]</column>
            <column>[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:CountryName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.12qqtqq0l3z092120zjco0pg2hq9].[sum:pop_density:qk]' scope='cols' value='Population Density' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:Year:qk]' value='Century Gothic' />
            <format attr='font-family' field='[federated.12qqtqq0l3z092120zjco0pg2hq9].[sum:pop_density:qk]' value='Century Gothic' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:CountryName:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:CountryName:nk]</rows>
        <cols>[federated.12qqtqq0l3z092120zjco0pg2hq9].[sum:pop_density:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Push Factors'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Push Factors</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='PushFactors (SingaporeEmigration)' name='federated.10fs5bm157diiu18ao75e0d7pa3j' />
          </datasources>
          <datasource-dependencies datasource='federated.10fs5bm157diiu18ao75e0d7pa3j'>
            <column caption='Push Factor' datatype='string' name='[PushFactor]' role='dimension' type='nominal' />
            <column caption='Total Responses' datatype='integer' name='[TotalResponses]' role='measure' type='quantitative' />
            <column-instance column='[PushFactor]' derivation='None' name='[none:PushFactor:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalResponses]' derivation='Sum' name='[sum:TotalResponses:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.10fs5bm157diiu18ao75e0d7pa3j].[none:PushFactor:nk]' direction='DESC' using='[federated.10fs5bm157diiu18ao75e0d7pa3j].[sum:TotalResponses:qk]' />
          <filter class='quantitative' column='[federated.10fs5bm157diiu18ao75e0d7pa3j].[sum:TotalResponses:qk]' included-values='in-range'>
            <min>46</min>
            <max>89</max>
          </filter>
          <slices>
            <column>[federated.10fs5bm157diiu18ao75e0d7pa3j].[sum:TotalResponses:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.10fs5bm157diiu18ao75e0d7pa3j].[none:PushFactor:nk]' value='19' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.10fs5bm157diiu18ao75e0d7pa3j].[none:PushFactor:nk]' value='208' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10fs5bm157diiu18ao75e0d7pa3j].[none:PushFactor:nk]</rows>
        <cols>[federated.10fs5bm157diiu18ao75e0d7pa3j].[sum:TotalResponses:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Seasonal climate'>
      <table>
        <view>
          <datasources>
            <datasource caption='DimCostOfLiving+ (singaporeemigration) (2)' name='federated.12qqtqq0l3z092120zjco0pg2hq9' />
          </datasources>
          <datasource-dependencies datasource='federated.12qqtqq0l3z092120zjco0pg2hq9'>
            <column aggregation='Sum' caption='Country ID' datatype='integer' name='[CountryID]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Country Id' datatype='integer' name='[CountryId]' role='dimension' type='ordinal' />
            <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column-instance column='[CountryID]' derivation='None' name='[none:CountryID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CountryId]' derivation='None' name='[none:CountryId:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[temperature]' derivation='Sum' name='[sum:temperature:qk]' pivot='key' type='quantitative' />
            <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:CountryId:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CountryId:ok]' member='1' />
              <groupfilter function='member' level='[none:CountryId:ok]' member='2' />
              <groupfilter function='member' level='[none:CountryId:ok]' member='3' />
              <groupfilter function='member' level='[none:CountryId:ok]' member='4' />
              <groupfilter function='member' level='[none:CountryId:ok]' member='5' />
              <groupfilter function='member' level='[none:CountryId:ok]' member='6' />
              <groupfilter function='member' level='[none:CountryId:ok]' member='7' />
              <groupfilter function='member' level='[none:CountryId:ok]' member='8' />
              <groupfilter function='member' level='[none:CountryId:ok]' member='9' />
              <groupfilter function='member' level='[none:CountryId:ok]' member='199' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:CountryName:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:CountryId:ok]</column>
            <column>[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:CountryName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.12qqtqq0l3z092120zjco0pg2hq9].[sum:temperature:qk]' scope='rows' value='Average Temperature (Celsius)' />
            <encoding attr='space' class='0' field='[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:Month:qk]' field-type='quantitative' max='12' min='3' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.12qqtqq0l3z092120zjco0pg2hq9].[sum:temperature:qk]' value='Century Gothic' />
            <format attr='font-family' field='[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:Month:qk]' value='Century Gothic' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.12qqtqq0l3z092120zjco0pg2hq9].[sum:temperature:qk]' palette='blue_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:CountryName:nk]' />
              <lod column='[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:CountryID:ok]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-family' value='Century Gothic' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d3d3d3' />
                <format attr='mark-labels-mode' value='selection' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12qqtqq0l3z092120zjco0pg2hq9].[sum:temperature:qk]</rows>
        <cols>[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:Month:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Singaporeans Living Overseas'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Singaporeans Living Overseas</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='OverseasSingaporeans (singaporeemigration)' name='federated.0oy6exl0ybhpfo1g7hkxg1hh519k' />
          </datasources>
          <datasource-dependencies datasource='federated.0oy6exl0ybhpfo1g7hkxg1hh519k'>
            <column datatype='integer' name='[Singaporeans Overseas]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Singaporeans Overseas]' derivation='Sum' name='[sum:Singaporeans Overseas:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0oy6exl0ybhpfo1g7hkxg1hh519k].[sum:Singaporeans Overseas:qk]' field-type='quantitative' max='222293' min='150000' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0oy6exl0ybhpfo1g7hkxg1hh519k].[sum:Singaporeans Overseas:qk]</rows>
        <cols>[federated.0oy6exl0ybhpfo1g7hkxg1hh519k].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Surveyed Professions'>
      <table>
        <view>
          <datasources>
            <datasource caption='Professions_Percentage' name='federated.1ww38l91u35sr319glkgr0ubtjcx' />
          </datasources>
          <datasource-dependencies datasource='federated.1ww38l91u35sr319glkgr0ubtjcx'>
            <column caption='Profession' datatype='string' name='[F1]' role='dimension' type='nominal' />
            <column caption='Percentage who want to migrate' datatype='real' name='[F3]' role='measure' type='quantitative' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
            <column-instance column='[F3]' derivation='Sum' name='[sum:F3:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <rows>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.1ww38l91u35sr319glkgr0ubtjcx].[sum:F3:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.1ww38l91u35sr319glkgr0ubtjcx].[none:F1:nk]</dimension>
              </dimensions-to-sort>
            </shelf-sort>
          </rows>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ww38l91u35sr319glkgr0ubtjcx].[none:F1:nk]</rows>
        <cols>[federated.1ww38l91u35sr319glkgr0ubtjcx].[sum:F3:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Where Singaporeans Actually Migrated To'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Where Singaporeans Actually Migrated To</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Emigration Numbers' name='federated.0tmz6wh1rcir141esh4ij1706oac' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0tmz6wh1rcir141esh4ij1706oac'>
            <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Emigration Num' datatype='real' name='[EmigrationNum]' role='dimension' type='ordinal' />
            <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[EmigrationNum]' derivation='Sum' name='[sum:EmigrationNum:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0tmz6wh1rcir141esh4ij1706oac].[none:CountryName:nk]' direction='DESC' using='[federated.0tmz6wh1rcir141esh4ij1706oac].[sum:EmigrationNum:qk]' />
          <filter class='quantitative' column='[federated.0tmz6wh1rcir141esh4ij1706oac].[sum:EmigrationNum:qk]' included-values='in-range'>
            <min>50000.0</min>
            <max>329656.0</max>
          </filter>
          <slices>
            <column>[federated.0tmz6wh1rcir141esh4ij1706oac].[sum:EmigrationNum:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tmz6wh1rcir141esh4ij1706oac].[none:CountryName:nk]</rows>
        <cols>[federated.0tmz6wh1rcir141esh4ij1706oac].[sum:EmigrationNum:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Action items'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone forceUpdate='true' h='10875' id='4' type='text' w='96600' x='1600' y='1625'>
          <formatted-text>
            <run fontalignment='1' fontcolor='#75a1c7' fontsize='48'>Call-to-Action</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='75250' id='7' type='text' w='79400' x='20200' y='15375'>
          <formatted-text>
            <run bold='true' fontsize='14'>Address Cost-of-Living</run>
            <run>Æ&#10;&#10;</run>
            <run fontsize='14'>Regulate hawker centres and other eateries providing low-cost food. Out-sourcing hawker centres to growth-orientated enterprises should be kept to a minimum.</run>
            <run>Æ&#10;&#10;</run>
            <run fontsize='14'>Diversify sources of goods to encourage competition - this will help to drive prices down.</run>
            <run>Æ&#10;&#10;&#10;&#10;</run>
            <run bold='true' fontsize='14'>Address Quality of Life</run>
            <run>Æ&#10;&#10;</run>
            <run fontsize='14'>Regulate private organizations regarding working hours for better work-life balance.</run>
            <run>Æ&#10;&#10;&#10;&#10;</run>
            <run bold='true' fontcolor='#555555' fontsize='14'>Address over-crowding</run>
            <run>Æ&#10;&#10;</run>
            <run fontcolor='#555555' fontsize='14'>Leverage technology and explore possibilities of out-sourcing to other countries to increase the productivity per citizen. This will help to reduce the reliance on worker numbers to sustain the GDP.</run>
            <run>Æ&#10;&#10;&#10;&#10;</run>
            <run bold='true' fontcolor='#555555' fontsize='14'>Address Job Opportunities / Salary</run>
            <run>Æ&#10;&#10;</run>
            <run fontcolor='#555555' fontsize='14'>Place emphasis on increasing productivity of citizens by offering highly subsidized courses for skills upgrading. This will allow them to undertake better job opportunities.</run>
          </formatted-text>
        </zone>
        <zone h='14625' id='8' is-centered='0' is-scaled='1' param='X:/TacklingSingaporeEmigration/tableau/tackling_brain_drain_v3.twb Files/Image/stack-of-books-clipart-yTkeLn5jc.png' type='bitmap' w='11800' x='4200' y='74375' />
        <zone h='18125' id='9' is-centered='0' is-scaled='1' param='//mac/Home/Desktop/col2.png' type='bitmap' w='16400' x='2100' y='18500' />
        <zone h='13125' id='10' is-centered='0' is-scaled='1' param='//mac/Home/Desktop/stressfree.png' type='bitmap' w='10800' x='4900' y='40500' />
        <zone h='18125' id='11' is-centered='0' is-scaled='1' param='//mac/Home/Desktop/overcrowdinfg.jpg' type='bitmap' w='15900' x='1500' y='56125' />
      </zones>
    </dashboard>
    <dashboard name='Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='9' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='8' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='10' type='empty' w='100000' x='0' y='0'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
        </zone>
        <zone h='36125' id='1' name='Cost of living' w='26300' x='41100' y='25500' />
        <zone forceUpdate='true' h='17500' id='2' type='text' w='28300' x='2100' y='3875'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontsize='48'>39%</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontcolor='#000000' fontsize='14'> Surveyed Singaporeans</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontcolor='#000000' fontsize='14'> want to migrate</run>
            <run fontalignment='1'>Æ&#10;&#10;</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#f5f5f5' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='17500' id='3' type='text' w='31400' x='34300' y='3750'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#75a1c7' fontsize='48'>70%</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontcolor='#000000' fontsize='14'>Stated cost of living </run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontcolor='#000000' fontsize='14'>as a push factor</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#f5f5f5' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='17500' id='4' type='text' w='27900' x='69700' y='3875'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#75a1c7' fontsize='48'>76%</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontcolor='#000000' fontsize='14'>Stated quality of life as </run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontcolor='#000000' fontsize='14'>a push factor</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#f5f5f5' />
          </zone-style>
        </zone>
        <zone h='33375' id='5' name='Population density' w='35800' x='2100' y='64375' />
        <zone h='32125' id='6' name='Emigration hotspots' w='37100' x='2100' y='25125' />
        <zone h='37000' id='7' name='Happiness Index' w='29100' x='69300' y='24750' />
        <zone h='27000' id='11' name='Push Factors' w='56900' x='39900' y='64500'>
          <layout-cache minwidth='308' type-h='fixed' type-w='scalable' />
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Problem Statement Slide'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#75a1c7' fontsize='22'>Tackling the Brain Drain</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#00000000' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='border-style' value='none' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#00000000' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='10' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='8' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='56625' id='3' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='5500' id='5' type='title' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='3250' id='6' type='text' w='98400' x='800' y='6500'>
                  <formatted-text>
                    <run fontsize='11'>An Objective Look at the Reasons Behind the Emigration of Singaporeans</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='41375' id='24' name='Surveyed Professions' w='98400' x='800' y='57625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='13500' id='18' type='text' w='46000' x='1300' y='19500'>
          <formatted-text>
            <run fontcolor='#000000' fontsize='14'>All this is despite having high standards of safety, education and a good economy.</run>
            <run>Æ&#10;&#10;</run>
            <run bold='true' fontcolor='#75a1c7' fontsize='14'>Why are Singaporeans leaving the country?</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </zone>
        <zone h='11625' id='19' type='text' w='18200' x='900' y='9875'>
          <formatted-text>
            <run bold='true' fontcolor='#f28e2b' fontsize='48'>39%</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='7500' id='20' type='text' w='33300' x='15500' y='11750'>
          <formatted-text>
            <run fontcolor='#000000' fontsize='16'>Singaporeans want to </run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontsize='16'>migrate*</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='5125' id='21' type='text' w='53800' x='1300' y='44250'>
          <formatted-text>
            <run>*Survey data conducted on 175 Singaporeans in July 2018. Survey conducted by Ipsos and SSI in 2015 on 1050 Singaporeans had a figure of 42% of Singaporeans wanting to migrate.</run>
          </formatted-text>
        </zone>
        <zone h='40500' id='15' name='Emigration Numbers (sg)' w='43500' x='55500' y='12125' />
      </zones>
    </dashboard>
    <dashboard name='Survey insights'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='40125' id='1' is-centered='0' is-scaled='1' param='X:/TacklingSingaporeEmigration/tableau/tackling_brain_drain_v3.twb Files/Image/wordcloudV2.png' type='bitmap' w='36800' x='9400' y='60875' />
        <zone forceUpdate='true' h='9750' id='2' type='text' w='49300' x='2300' y='50875'>
          <formatted-text>
            <run fontcolor='#000000' fontsize='14'>Survey Question : Why do you think Singaporeans are leaving the country? </run>
          </formatted-text>
        </zone>
        <zone h='23125' id='3' name='Desire to emigrate with age range' show-title='false' w='48900' x='2600' y='8000' />
        <zone forceUpdate='true' h='4750' id='4' type='text' w='41200' x='2500' y='2125'>
          <formatted-text>
            <run fontcolor='#000000' fontsize='14'>Desire to emigrate with age-range</run>
          </formatted-text>
        </zone>
        <zone h='44375' id='5' name='Seasonal climate' w='41500' x='55000' y='3000' />
        <zone h='38000' id='6' name='Singaporeans Living Overseas' w='46300' x='52400' y='49875' />
        <zone forceUpdate='true' h='20750' id='7' type='text' w='52300' x='2200' y='25000'>
          <formatted-text>
            <run fontcolor='#000000' fontsize='12'>Generally, desire to emgirate grew with age. Notably, the baby-boomer generation have no desire to emigrate. </run>
            <run>Æ&#10;&#10;&#10;</run>
            <run fontcolor='#000000' fontsize='12'>Weather was the 5th most important push factor, and the comparison against the popular emigration destinations is shown.</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='12250' id='8' type='text' w='49600' x='52400' y='86875'>
          <formatted-text>
            <run fontcolor='#000000' fontsize='14'>There is also an interesting trend of Singaporeans choosing to work overseas while maintaining Singapore citizenship.</run>
          </formatted-text>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Tackling the Brain Drain' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Tackling the Brain Drain</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='11' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='98340' id='9' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
              <zone h='98340' id='7' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
                <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
                  <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='830' />
                  <zone h='87863' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='11307'>
                    <flipboard active-id='8' nav-type='caption' show-nav-arrows='true'>
                      <story-points>
                        <story-point caption='Problem Statement' captured-sheet='Problem Statement Slide' id='8'>
                          <capturedDeltas>
                            <dashboard name='Problem Statement Slide'>
                              <zone id='6'>
                                <formatted-text>
                                  <run fontsize='10'>An Objective Look at the Reasons Behind the Emigration of Singaporeans</run>
                                </formatted-text>
                              </zone>
                              <zone id='18'>
                                <formatted-text>
                                  <run fontcolor='#000000' fontsize='14'>Despite high standards of safety, education and a good economy - leading to loss of identity and lowered contribution to GDP. </run>
                                  <run>Æ&#10;&#10;</run>
                                  <run bold='true' fontcolor='#75a1c7' fontsize='14'>Why are Singaporeans leaving the country?</run>
                                  <run>Æ&#10;</run>
                                </formatted-text>
                              </zone>
                              <zone id='21'>
                                <formatted-text>
                                  <run>*Survey data conducted on 175 Singaporeans in July 2018 by us. Survey conducted by Ipsos and SSI in 2015 on 1050 Singaporeans had a figure of 42% of Singaporeans wanting to migrate.</run>
                                </formatted-text>
                              </zone>
                            </dashboard>
                          </capturedDeltas>
                        </story-point>
                        <story-point caption='Additional Insights' captured-sheet='Survey insights' id='14'>
                          <capturedDeltas>
                            <dashboard name='Survey insights'>
                              <zone id='2'>
                                <formatted-text>
                                  <run fontcolor='#000000' fontsize='14'>Free-text Question : Why do you think Singaporeans are leaving the country? </run>
                                </formatted-text>
                              </zone>
                              <zone id='7'>
                                <formatted-text>
                                  <run fontcolor='#000000' fontsize='12'>Generally, desire to emgirate grew with age, except for the baby-boomer generation.</run>
                                  <run>Æ&#10;&#10;</run>
                                  <run fontcolor='#000000' fontsize='12'>Weather was the 5th most important push factor, and the comparison against the popular emigration destinations is shown.</run>
                                </formatted-text>
                              </zone>
                            </dashboard>
                          </capturedDeltas>
                        </story-point>
                        <story-point caption='Main Dashboard' captured-sheet='Dashboard' id='13'>
                          <capturedDeltas>
                            <dashboard name='Dashboard'>
                              <zone id='2'>
                                <formatted-text>
                                  <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontsize='48'>39%</run>
                                  <run fontalignment='1'>Æ&#10;</run>
                                  <run fontalignment='1' fontcolor='#000000' fontsize='14'> Singaporeans</run>
                                  <run fontalignment='1'>Æ&#10;</run>
                                  <run fontalignment='1' fontcolor='#000000' fontsize='14'> want to migrate</run>
                                  <run fontalignment='1'>Æ&#10;&#10;</run>
                                </formatted-text>
                              </zone>
                            </dashboard>
                          </capturedDeltas>
                        </story-point>
                        <story-point caption='Call To Action' captured-sheet='Action items' id='4'>
                          <capturedDeltas>
                            <dashboard name='Action items'>
                              <zone id='5'>
                                <formatted-text>
                                  <run bold='true' fontcolor='#555555' fontsize='14'>Address Over-Crowding</run>
                                  <run>Æ&#10;&#10;</run>
                                  <run fontcolor='#555555' fontsize='14'>Place emphasis on increasing productivity of citizens by offering highly subsidized courses for skills upgrading. </run>
                                  <run>Æ&#10;&#10;</run>
                                  <run fontcolor='#555555' fontsize='14'>Leverage technology and explore possibilities of out-sourcing to other countries to increase the productivity per citizen. </run>
                                </formatted-text>
                              </zone>
                            </dashboard>
                          </capturedDeltas>
                        </story-point>
                      </story-points>
                    </flipboard>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='177'>
    <window class='dashboard' maximized='true' name='Tackling the Brain Drain'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='dashboard' name='Problem Statement Slide'>
      <viewpoints>
        <viewpoint name='Emigration Numbers (sg)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Surveyed Professions' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Dashboard'>
      <viewpoints>
        <viewpoint name='Cost of living'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Emigration hotspots'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Happiness Index'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Population density'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Push Factors' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Survey insights'>
      <viewpoints>
        <viewpoint name='Desire to emigrate with age range' />
        <viewpoint name='Seasonal climate'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Singaporeans Living Overseas'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='6' />
    </window>
    <window class='dashboard' name='Action items'>
      <viewpoints />
      <active id='7' />
    </window>
    <window class='worksheet' name='Seasonal climate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:CountryID:ok]</field>
            <field>[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:CountryId:ok]</field>
            <field>[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:CountryName:nk]</field>
            <field>[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:Month:qk]</field>
            <field>[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:TimeId:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Population density'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:CountryID:ok]</field>
            <field>[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:CountryId:ok]</field>
            <field>[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:CountryName:nk]</field>
            <field>[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:TimeId:ok]</field>
            <field>[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:Year:qk]</field>
            <field>[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:countryid:qk]</field>
            <field>[federated.12qqtqq0l3z092120zjco0pg2hq9].[sum:pop_density:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Cost of living'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:CountryId:ok]</field>
            <field>[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:CountryName:nk]</field>
            <field>[federated.12qqtqq0l3z092120zjco0pg2hq9].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Singaporeans Living Overseas'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oy6exl0ybhpfo1g7hkxg1hh519k].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Where Singaporeans Actually Migrated To'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tmz6wh1rcir141esh4ij1706oac].[none:Country:nk]</field>
            <field>[federated.0tmz6wh1rcir141esh4ij1706oac].[none:CountryId:ok]</field>
            <field>[federated.0tmz6wh1rcir141esh4ij1706oac].[none:CountryName:nk]</field>
            <field>[federated.0tmz6wh1rcir141esh4ij1706oac].[none:EmigrationNum:ok]</field>
            <field>[federated.0tmz6wh1rcir141esh4ij1706oac].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Emigration hotspots'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tmz6wh1rcir141esh4ij1706oac].[none:Country:nk]</field>
            <field>[federated.0tmz6wh1rcir141esh4ij1706oac].[none:CountryId:ok]</field>
            <field>[federated.0tmz6wh1rcir141esh4ij1706oac].[none:CountryName:nk]</field>
            <field>[federated.0tmz6wh1rcir141esh4ij1706oac].[none:EmigrationNum:ok]</field>
            <field>[federated.0tmz6wh1rcir141esh4ij1706oac].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Push Factors'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10fs5bm157diiu18ao75e0d7pa3j].[none:PushFactor:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Emigration Numbers (sg)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='48'>
            <card type='columns' />
          </strip>
          <strip size='48'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c58i2x0fz2by618pa53y0jj5iaf].[none:CostID:ok]</field>
            <field>[federated.0c58i2x0fz2by618pa53y0jj5iaf].[none:CountryID:ok]</field>
            <field>[federated.0c58i2x0fz2by618pa53y0jj5iaf].[none:CountryName:nk]</field>
            <field>[federated.0c58i2x0fz2by618pa53y0jj5iaf].[none:EmigrationNum:ok]</field>
            <field>[federated.0c58i2x0fz2by618pa53y0jj5iaf].[none:Year:qk]</field>
            <field>[federated.0c58i2x0fz2by618pa53y0jj5iaf].[sum:EmigrationNum:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Happiness Index'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12qqtqq0l3z092120zjco0pg2hq9 (copy)].[none:CountryID:ok]</field>
            <field>[federated.12qqtqq0l3z092120zjco0pg2hq9 (copy)].[none:CountryId:ok]</field>
            <field>[federated.12qqtqq0l3z092120zjco0pg2hq9 (copy)].[none:CountryName:nk]</field>
            <field>[federated.12qqtqq0l3z092120zjco0pg2hq9 (copy)].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Desire to emigrate with age range'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0y8so6k01t65dm1bs7xxp0cemvkt].[none:Age range:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Surveyed Professions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ww38l91u35sr319glkgr0ubtjcx].[none:F1:nk]</field>
            <field>[federated.1ww38l91u35sr319glkgr0ubtjcx].[none:F2:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Action items' width='192'>
      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
      9zT/PyjcCzACZnLYAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Cost of living' width='192'>
      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
      viQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='135' name='Desire to emigrate with age range' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Emigration Numbers (sg)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAANHklEQVR4nO3d23Ma2bkF8EVzb0TT0Egg2RqwZI/tmbGV1JlKnUlSqfmrT53H85BUKjNl
      j2WPfJEFRhcjkMStuTW33ucBmTGxE7UcxG2v33Ob2lX+Frs3LDUuIYQAkaSUWS+AaJYmEoDB
      YDCJlyGaOs+VVwiB49wB2rYfPbMMd8gPq2PD7jSRuvsQhh6ewjKJbsaVO4AAoLjd6DTLyB2e
      oNkDwqofQgi43W7Ytg0eI2hRua4+BAuUzgrwhWPwuQTsQReNjrgMgY1gUMVgMIDb7Z7Oiokm
      yEEArsYA0KLip0AkNQaApMYAkNQYAJIaA0BSYwBIagwASe3qKgQESsUCgnoc5eIpYoaO5uUX
      YbYtoKrBm18l0Q25egcQAFw2Dl7vweMBnr48Qr16gadPfgbc3ptfIdENctQFKpcqcHu9ePU6
      A80/gNmwENE01Go1doFoobEKQVLjIZikxgCQ1BgAkhoDQFJjAEhqDABJjQEgqTEAJLXrdYHO
      zxCPhlFnF4iWhOMu0NO//RWegIKfn2fZBaKl4bgLFFQDyL8/hc8t2AWipcEuEEmNh2CSGgNA
      UmMASGoMAEmNASCpMQAkNQaApMYAkNQcdIGAykUBnmAElYtzrMb10Q9ksAtEi87Rb4TZLg9O
      M8+RL7dxam5gNeTG21d5/O77H6awRKKb46gLdJx5jfYggGhch92oswtES4NdIJIaD8EkNQaA
      pMYAkNQYAJIaA0BSYwBIagwASY0BIKk5qkKcHGXhCcUQcLsw6LVR7whoqhdwBxDTw1NYJtHk
      2UI4+CZYCLQaNZyXKjg6fo94cgOqz4VM9hA//vgjIGzYtg2Px1GvjmimhBA4vmjgWa6Eo/PG
      1QEQQuDFsyeIGQZKtQY8bh8UjwcR1QOXbwXrawarEDTXhBDIl1vYzZWQLZq4bYSwkzaQXguz
      C0TLq1AdDv3BaQ0JXcVO2sB2QoOiuEbXMAC0VC5MC7u5C7zJ12Cs+LGTNnBvIwK38vnPexgA
      WniVRge7hyW8OqlAC/qwkzZw/5YOr/vqDzkZAFpIZquL54cl7B1XEPR5sJM28PC2Dp/nenPI
      ANDCaFg9/HpUxovDMjxuFx6nDHy7GUXA9+WfQDIANNfanT5+PR4OvRACj1IGvvsqCtU/mUfz
      MwA0dzq9AV4eV/D8sIRu38a3m1E8ShkIByf/exQMAM2Fbn+A1++reJ4roWn18c1mFI9SMURC
      friu/udfjAGgmekPbOzna9jNXaDa7OLBbR07KQPRFT9crpsc+984qkJ86AKFPAra3RZa/9QF
      YgDIqYEtcHBaw26uhAuzjXsbOnbSBla1wNSG/mPOu0DVBo72M0jcTcEPwS4QOWbbAu/OTOzm
      SjittLCd1LCTjiOpB2cy9B9z3AWKxhM4Oz2FGokALnaB6N8TQuDwvIHdXAnHFw2k18LYSRu4
      bYRmPvQf4xmAJkYIgfflJnZzJbwr1rEZX8FO2kBqdWWuhv5jDAD9R4QQKFTb2M2VkCnUkIwO
      S2dba+Ols3nFANAXOa8Nh34/X0NcC2AnbeDuuvYvS2fzigEgx8p1C7uHJbw+qUIP+fA4beD+
      hg6Pg9LZvGIA6N+qNTt4fljGy5MKVL8HOykDD76gdDavGAD6RL3dw69HJfx6VIHXo+BxysA3
      m1EEvMv3f8wAEGx7+OlNpmDioFCD4nLhUSqGbzdjUP3L/f0OAyAh2xbIV4YDny3WYXX72IiF
      sJ3UsJXQln7oP8YASGA48C1kCzVki3W0un3ciqnYSkSwlQgjFJh8y3JROKpCHOy/gktxo9nu
      QHH74PF54XMNEImvw2AXaO7YQuC00rp8hzfR6vSxEVWxdfkOvyLxwP8zRztA0yyj0XVBWDWU
      2zZCPhdOjo7x/Q9/hlcBu0AzZguBwkcD3+z0sR5VsZ24HPgb6NEvC0ddoIM3LxFc0VAqlRHV
      ddiKF3pYhW0LxGJR7gBTZguBYvW3gW9YfSR19fIePoxw0DfrJS4MngEWwIe6QbZgIlM00Wj3
      kIgGh+/wSQ3hoO9G/2hkmTEAc0gIgWKtPXqHN1s9JPUgtpIathMawioHflIYgDkghMDZRwNf
      a/WQ0H97h9c48DeGAZgBIQTOTWs08NVmB2uR4Ohz+Ijqx5y2h5cOAzAFHwY+WzSRKQwHfjUy
      fIffTmqIqL657csvOwbgBgghcFG3hofWgolKs4NV7bd7eD3EgZ8XDMAECCFQqneQKdaQLZgo
      NzqIa4HRPXw0NL2nHND1MABfQAiBcqODzOU7fLlhwQgHRvfwsSk+1oP+MwyAAx8G/sM9fKlu
      IRYOjO7hOfCLy3EXSAig1e3D5w/CpShL3QUSQqDSHL7DZwsmLuoWYit+bCUj2E5oMMIc+GUx
      FoAXz54iEInj3p2vxi5qmmVk3x5h6/EWfvk5i81bkaXqAgkhUG12kSkOB/7cbCMa8g9vaZIa
      4uHZPLSJbt7Y1LZaTQQi8bELhBDI508RW19Fbv897m4lYPUEvn30GE2zhlgsigncRU2VEAK1
      Vnd0D39utqFfDvyP323M7CllNH1jO8CbvV10FBWPH9671ovM+y3Qh4H/cA9/VhsO/NblPTwH
      Xl5jO4AWiWD/6GxWa5kYIQTMdu/ym9YaitU2IqoPW0kNf/lmHWuR2T+Sj+bDKACNWgkv9/Zw
      1lq8wRBCoN7uje7hi9UWwqoP2wkNf364jgQHnv6Fj26BBPJHOQw8IWxurF3rRaZ9CyQEUG9f
      3tIUTRQrbawEvaPP4efhoau0GEY7gFWvIHtcQCQWv3YAbpoA0Gh3kS3WkSnUULgc+K1EGH+8
      n0BCV6Fw4OkLjB2ChT1Ard6AHolc60UmvQMMB76Hd5fv8KeVFkJ+z+jQmoxy4Gkyxg7BP/30
      E26n7lw7AJP0JHOOf7w9Q8jvwZ2Ehj/cW8M6B55uyFgA4mE/nu69xa315KzWg+++iuH3d+IL
      8WRhWnxjASi3bKxHg7NaCwDAv4SP36P5NQqAaZpY04M4KDQ/uSjz8hU27iTxv//zf0jf/xou
      AdidJlJ3H8LQw1NdMNEkjZ5r7bK72Ds4ghHVPrlIVVXUyzV8/6f/glnvI6z6IYSA2+2GbdsL
      V4Ug+mC0A4T1OO6lb+O83vrkolgyAa/fi+Oj9/jD4ztodARu3boNIWwoisIA0MIaOwOYjRa6
      vcEnF/kDAQBAKjVsiQZDU1gZ0RSM/bSH3W3DiK/Pai1EUzcWAMXjQz63j8zh+1mth2iqxm6B
      kre/gpEcwOfnR5Ekh9EOYJomGqUiXmdPsJGc3RdhRNM0CoCmaTBbFrbTm7NcD9FUjZ0Bmo0G
      2lZnVmshmrrRGeDNwQHW09uzXAvR1I12gLDfg4uzM1yUzU8uqpTLsAFYlgWraeK8XINlWWi1
      2tNcK9HEjXYAXyCEu19/jdhnqtCWWUcoGsHTJ0+xlkxAcQFvX+Xxu+9/mOpiiSZttANEtBBy
      +6/w96cvPnvhoFkG3ArOLkyYDQsRTUOtVmMXiBbaaAfw+lUo3iBUxf7kovV0CgDwx/9e/eyL
      MAC0qMa+CHtw7w5Kje6s1kI0dWMBsNoWep8pwxEtq7HvAXKHuRktg2g2+EUYSW0sAPcf3Eev
      15vVWoimbrwOrShotT79m2CiZTU6BOcPM2jbCmybH2mSPEZPhus0azgzuwh4BFZX5/vZoEST
      4ug3wor5POIbG2hVa2h3W2h1BDTVC7gDiC3hTySRPJSrLwHsbg99u49nT56h2u7AZXfw7Pke
      9EiYVQhaaI4C4AsEIHpdqOEgBlYHrY6NB/fuoHhegqIofBQ5LSz+TCpJzdEOQLSsGACSGgNA
      UmMASGoMAEmNASCpMQAkNQaApOa5+pJhF8hYM/D2zQHCuo6+7RrrAhEtKsddoJ4tsLoWxXm5
      wS4QLQ3HXSAFNt4eHEH1gV0gWhrsApHUeAgmqTEAJDUGgKTGAJDUGACSGgNAUmMASGoMAEnN
      URfoOPsOsTUdB9lj+PxBuBQFPtcAkfg6DHaBaIE52gE8ioJKqYa7D9MolZoI+hScnhawshJi
      F4gWmqMqRL1aRSDkx/5+Doahw+oJ6GEVti0Qi0VZhaCFxS4QSY2HYJIaA0BSYwBIagwASY0B
      IKkxACQ1BoCkxgCQ1Bx1gQBgYFXxy4sDhPQoXAC7QLQUHO8AzboFr+pBvd5hF4iWhuMqRL/T
      xH7mCBFdQ2/gYheIlgK7QCQ1HoJJagwASY0BIKkxACQ1BoCkxgCQ1BgAkhoDQFJz3AUSQiCb
      fQcMOqh3bNidJlJ3H7ILRAvN8Q4waJ4jf1pA0bQRVv0QQsDtdrMLRAvNcRVCCIH3JycwYhE0
      OuIyBDaCQZVVCFpY7AKR1HgIJqkxACQ1BoCkxgCQ1BgAkhoDQFJjAEhqDABJzXEXCBDY+2UX
      7pAfFrtAtCQc7wB9q47c4QmaPbALREvjWlWIjmXBHnTZBaKlwS4QSY2HYJIaA0BSYwBIagwA
      SY0BIKkxACQ1BoCk9v+iQfYYmHtqoQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Emigration hotspots' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Happiness Index' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAJwElEQVR4nO3d7W/bWh0H8K+PnXQt60S3i7YxtnVcISEkXiAkXvLf8g/whjfwBiQE4oqL
      xgZ3d13btSPt1rRJ2jzaPufwIg917Lhx2tRO/ft+pKjxQ9zTNF8fn+Tn2LHWWhAJpYpuAFGR
      MgVAa33b7SAqBHsAEo0BINEYABKNASDRGAASjQEg0RgAEo0BINGmAmCtwe67Nziqn8Nai0az
      WVS7iHIxFQDHUXC9NWxtbeLseB8fDj7DGANjTFHtI7pVXnTCWgvv3gZcv4tu6GK9qqCUAuvl
      qKycLNWgWmu4rptHe4hyxUEwicYAkGgMAInGAJBoDACJxgCQaAwAiZZaCgFYNFsshaBym/ok
      OFoK0W6c4LvdY/zmVw9gjEGtVoPjOFO34WOcXOeP5xEtQ2opRMs3UI6dlEI8ffoU1tpJWcT4
      fvQ2a/54njFm7rpZ519H1tDNC96y51OxRJRCLCt4y55/HUX2vmXslb35q9x9ZdnbLjuQ8V75
      Jtu/jmUF70brZ+0BDg8PF/rDljlvFbe5im26S38ngESA0g53Z4Ut67rzwpu5B6hWqzP/qCx7
      1kX3vtfZWy/ymNtuT5b1o/ud6Pqz9kfz9rRXPWbevJs+/i61aZbMPYDWemrD8YddNb3q6656
      +1ZZPOxX7RzzWHfR7VyrByBatZ3EdbcjYhBMyzdvT3tXsBSCREuWQrx/h+ZFF0G/g9rnelHt
      IspF4lsh7q9XYVUFF50++p3zotpFlItYD2DR6mncVz667SaOTtv8WhQqNRGlEERpOAgm0RgA
      Eo0BINEyfxC2u7ub+LDDWpv4aDnLTSm11PXu6ocwVLylDYKvKrGddVvmerPaMg5F9H7WMN1G
      SGk1La0UYvxPXtV3ixYNaDx8aY/Luj3HcRJhHc9bNKDsQZdHTC3QXQjodYK56LwsvWi094zO
      K2MPGjsn2GBv5z0ePnmODc+g0Qnw+KutW/vldGnV98SLBHRW+G7ag84zfu4WDV7iWyHGpRCH
      tYPhRhkAwt0IKLD4GDTxrRCtnsb2Ix9fwgCdfjgphVjVQwci4PqHuCyFINH4QRiJxgCQaAwA
      icYAkGgMAInGAJBoDACJxgCQaLEAWBzufYCvgYOdt/jjn/9eTKuIcpIohjs6qsF3N2BsFS+f
      PmQpBJXadDEcFF5uv8L9B5sIzQa6/XByhRiiMmItEImW6YQYa4Hf/eU9qp5CxXWHPz2FqqdQ
      dd3L+1csr3gKaoXLaUmmzGeE/XzLItAB/HCAMLQIfIu2sQi1RWgsQoPIfYvAWIQak+nQWAAp
      Jyc4DjzXgacceArwlINKdHpyf7heZbTOeDr6OM914DrZv604y3oStiX1d67EIZAxFr42CEIN
      PzQIQgNfG/ihHt4fTU8vjywLR8v08L7WBok/ygIWFp6rUHUve6iKq1D1Rr1Y5vkKFc9FxVVQ
      c57zrOOnLOstc1v8nUMrEYC8WGuhjR2FRiPQ5jJQowBdhiq5fDw9CVxoYFKePsdxpoPjuaND
      wvG8y3BFl48DFg9fxVUrfUbWXSUqAHky1iIIzSg0sd5K60iQpnuz8fRl8IbToU4/N9ZVTixQ
      kXGZGwnXjHFbZTQdXa4cBSlZYwDuOIvhebBpgZoZuKneTUcOMYfLtEnv1Tx3GLZo71YdHQ4u
      1NONerWi3xhhACgzay2CyGHiuHdLG7cler/IOG68PO3lp5Qz1XslxmWx3m3m8kgwXTX7pP5Y
      ACwO93bx+MXXcHUXB59bePX8KQNAuTPjsdrU4eHlGx2zxm3BrHHcKHihnn2Ni9RSCKffxMnF
      AC+fPWYpBOVOKQf3qi7u4XZfd6mlEBabWO8OWApBpcYxAInG8wFINAaARGMASDQGgERjAEg0
      BoBEYwBItEQA6sc1+HpY97H/cb+AJhHlJ1YKobG3v4+fuPegWzW83mvgxfMXLIWg0oqdEqnw
      6NFDeDB4uP0L/Parc5ZCUKmxFIJE4yCYRGMASDQGgERjAEg0BoBEYwBINAaAREsEoHPehK+B
      1tkJdvYOimgTUW6mAmCtxds3/0an28XaxiZcx0wukEFURrFSCIPNzQdoN8/QMQM02hqvWApB
      JcZSCBKNg2ASjQEg0RgAEo0BINEYABIt80XySK7xG4XW2slt3nTWectaJzpvEQzAEqz6C+Im
      L5Cx6FU949NZ58WnlVK3su1FJALQOW+i8oMfotM4RqOr8dMXzxZ7pmYo8p99ncctKss/+zrr
      KKVuZdt0KfatEMNSiJ/98tdotftwlTMphTg4OFjqC2QZ/8i0F8hNXzQkR2opBAC0e8HkWyG2
      t7f54qDSYSkEica3QUk0BoBEYwBINAaARGMASDQGgERjAEi0WAAsPu6+x3mnj+bpF3zY/1RM
      q4hyMh0AC/iDPjrdHpqNBs4aZ/xWCCq1WC1QiIFvsO73YN0KNtYVL5BBpcZSCBKNg2ASjQEg
      0RgAEo0BINEYABKNASDRGAASLbUUwlqLRrNZTKuIcpJaCnF2vI8PB59ZCkGlFrtCzLAUQvs9
      dEMX69VhKcT4C4yIyoalECQad+0kGgNAojEAJBoDQKIxACQaA0CiMQAkWiIAJ0efcN7pAwCC
      IMi9QUR5ipVCWNSOatDGIuy38Y9v3xTULKJ8JL4VwnXXcPrlCC3lIAj9SS0QPwmmMmIpBInG
      QTCJxgCQaJmvE1yv1wEgcTXFVftJtIjMAVhbWwMwfaHl+MWX0y7KnNfP21J0qBcJP3csi+Eg
      +Arzwl6mn/OWLVvRO4Hx/cw9gESznlS6uVUIuTEG1loGgPK3SodXfBeIREuUQvzpD7/HSauH
      z7VDfPPt64KaRZSPqUGwNQFO6w002308f7KFL80unj35EbTWqFQqRbaT6FZMjQEcx0MQ+Pjx
      44dotbvo9Xq8QgyVGt8GJdE4CCbRGAASjQEg0RgAEo0BINEYABKNASDRUksh9nbe4Z+v3xbU
      LKJ8pJZCODYAHAevtrdZCkGllVoKoY1Bd6BZCkGlxlIIEo2DYBKNASDRGAASjQEg0RgAEo0B
      INEYABItEYD26f9Qvwhw/Okj3vz3+yLaRJSbqQBYG+Kbv/0VX5pt9AcDDPzLC2QQlVHik2A7
      uEC9O7xEUneg8fX2c34STKXFUggSjYNgEo0BINEYABKNASDRGAASjQEg0RgAEi21FMJajaOj
      4yLaRJSb1FKIo/0d1OotlkJQqaWWQtigj4vugKUQVGoshSDROAgm0RgAEo0BINEYABKNASDR
      GAASjQEg0RIBCAcXaPc0AItmq1lAk4jyEyuFsNj7z79w2tNoN07w3c4BSyGo1GI9gIZT2UCv
      VUfHN1COhVIKSvFIicrp/7LF8qj7CVE8AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='175' name='Population density' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Problem Statement Slide' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='150' name='Push Factors' width='192'>
      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
      HVeD1/u9HufF3lF8MjOIc6XWyeILAZ2v/wOuztmfF18oIWrlG2z4peozDXqmI9DwInqWwylk
      +/hjqOfr32XAswzesJLgqacobW5tw/pEF2f8XwlCt2YtxmnVJsH+7cmqtr2URN4K0iIIMY8g
      WF/P13Wj6m3/G1n4/qM3yRm6lPF1jrBNQ5NHAPGfwpGHXl7KQ79jD3IEEJqmyUmwEBUkAELT
      JABC0yQAQtMkAELTJABC0yQAQtMkAOImO8GWNxcTV+0moHxTCIbFcdXuC7pA3OL5fJXXRF1W
      K22VAIibzJ2Onj+Tk1vx8wUy0wtonvMD6ZXlv7nk5HjQsV3T9y4BEDeZjs5d7+P4j7aCCks6
      P5wbzJOD80k9bEtA3klyPDysSzY1MbkXSNx0d3b0hJSTXMCTP2ZmkN93MC97XyHmQCZKPx8u
      Zx3niueYyjtFlYtH2bR8DfE5l+qWj1K7rPVueo7Q45qURddga/nnvK1ngAQM5ikSAHELcO+I
      589HyQUcMrLp3msydLmA9+oMfsSHspwc7vf1tL5XyWRTWAqeE4yM6eCEA2UUn07g04g4xhr8
      cS6KY9mKNHz+tpCJ9znRzGImJXolUWc86Aq01QcT5lZ1960EQNx8Onc82m/ixxOZXEnpRLen
      AV0PentvIv3ECTjugceTtvemH2TvT9+z+63vazXijkeBP71S99Ni9N8Zcp+tgsPRDb+ASZw+
      vsdu1xIAcQtwpUs32LLnAOc8uvGkDkCHV7e2bD94ECc86VWtUqbtqHkEP2Z/RlxwjT3LJFjc
      Etw7evJzcjLtfXtVVt85ej+A07595NzfBc+KN3r3p0t8JFtsZavW8s9VGD9J4hL2ylrNJEZF
      squepxPIEUDcEnTuHrRXLvGAd7Un/9zphXdbBTyqXf/RefH0zP9hw6qFvPb+pWrPQOprXZy7
      TlmrdRLs3z6rdpeAFMQIjZNTIKFpEgChaRIAoWkSAKFpEgChaRIAoWkSAKFpEgChaRIAoWkS
      AKFpEgChaRIAoWkSAKFpEgChaRIAoWkSAKFpEgChaRIAoWkSAKFpEgChaRIAoWkSAKFpEgCh
      aRIAoWkSAKFpEgChaRIAoWkSAKFpEgChaRIAoWkSAKFpEgChaRIAoWkSAKFpEgChaRIAoWkS
      AKFpEgChaRIAoWkSAKFpEgChaRIAoWkSAKFpEgChaRIAoWkSAKFpEgChaRIAoWkSAKFpEgCh
      aRIAoWkSAKFp/w8ZkpvbQulD3wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Seasonal climate' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Singaporeans Living Overseas' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Survey insights' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Surveyed Professions' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3deXAcV4Ln929edd9VAAr3fREgCIL3JYnU2VKr797u7e3u3Znxjh2e3Qjb
      Eeu1NzzrCa/D6xnHOGbD3hjveLzTM31MH2q1RqJalChR4n2DJAiCIADivq8q1H3k4T9AtiiJ
      EiVKEAlVfvgXC1VZL6vyl+/lq3zvCYZhGJhMBUp80AUwmR4kMwCmgmYGwFTQzACYCpoZAFNB
      MwNgKmhmAEwFzQyAqaCZATAVNDMApoJmBsBU0MwAmAqaGQBTQTMDYCpoZgBMBc0MgKmgmQEw
      FTQzAKaCZgbAVNDMAJgKmhkAU0EzA2AqaGYATAXNDICpoJkBMK2JdDr9oIvwsZgBMBU0+UEX
      wPTFlNd0bo4vP+hi3JMZANOaSGdV/u6dgQddjHsyA/BZSE1w+ngPs8ksiBKuYBUtHe1UeBWE
      j7sNdYmeo2eYtLWyf08d9vssirZ4jbcva3Tu7yAk3edGPtQy184uUb65Fp/li3HomNcAn4XM
      NBeHUxSXlFJaEkSIT3D1Qh+L+U+wjblrnJoRKfbZP35o7kKwuCkq8mD5NBv5UFEGL48Sy+tr
      sfEH4osR44eBv5ZtO7pQJIPYRB9Xro8zH9tEUfBjvj65QrqonS2t4U9VDNFTxaZNn2oTBcUM
      wGdNzxOPLLC8ohCYP8fxgRVmrw2Rrn+Gb+8pZfLMr3n16AAR3UZ4wy6ePLCTemWYX/+2m9GJ
      k/zp9Ff5L3+4mfTAGd747QlGYxqOcAdPfeUA7WVetJmz/Pgnb7Dib+fJrz5HvXqdtw4d5mq0
      lKf+0fNsCs9w+O9X2PODrViXxjh35BCn+2bIygEaH/kyX9lZh1VNc+3wz7gpOBi9MkTG3cSB
      555kS30Ii6AR6TvCL189zVRCpKihgbJAOfU1DbS2re6iYaS58tJfcrBPoHnvszy9twH3Om1L
      mAH4rFx/iT/+N79CkKyE6jp47NnnqEqd48yJt5kJHOD7nWFWzvyYl8eb+foffY1SKUb/maOc
      PnEe5dEdfPWpTsZHW/mjJ6qIT/dw7mKSLd/6Q573SGgrYxw/cRHvUztR+s+h7P4Dvl20wORw
      L0NqFEfDY3yvIsfVmwu0BTPEoyky0Wn6ThxlJvgIv//f1eJIT3D85Vd50fIdvttuY3FmkDHX
      83zrX36dQOQK74yOMxfwEF4+zF8fVnnu9/5bauwqs30n+O2xPuzhalpu7aqhj9B/s5pv/N4m
      1MkxRmdr2Fi2Pg+l9Vnqh1Hr1/h33+rCIr97KkwMgr9lP7u37aHan+boJZH9/9Uj1FkBnGze
      s525czMkIykUWUSUFCyCTnKomxO901y5eeGONwjg2dbFrubNCG+cZTa0jdaNxShLV5m+PMmI
      s5UdXZUocj+gk4itkFFL2bWvjWIFcDfzpa8v8xevT0F7A05/Gdv27KHaK4IYQO1fQs1kGe4Z
      oPX5P2JDyAJA3eYdbI9dQ72jJIJQTVPdBXr6ouzatJkS//o9jNZvydcJTzCA22FHRMXtMVic
      XiZd6cMmaiRXYuRVHUmR4PYFsyBgCVay7YkDfGlfPW6LgJpcZjYmECpykF2o40vPl9F36hjv
      THWye0sdO3eEGDl7hIMrAt/ZtbrilSzLiGRYXk5QFnIgGTkicxEURzUgIkkuLI4Ptlscbiex
      2VniFRW4ZJ1MLEo0lsDqu+NJ2RRFu79BYOoS598apenxr7Dxs+9y+lyYAfjcuGneU8NLZ45y
      fDSEQ1KJL0dRSpoIBpyQuvU0yYK7tJ6iG5c5dmIGn0Ukn1xkQaxl/94Glq+f5aboRxCcWI04
      M2MrLM2mEFFAu32eFnH6iigpHeDqqWNEAm4UI8PiTJy2bRV8VDdTeed2lEOnOZYpxaMYZGLT
      DE7naa569zlGcoLzl+L4XXlku4KmasD6DID0J3/yJ3/yoAux7hlgyG4qij2IonDnw0h2H36P
      G5sMlkAVpbYEC7NLxLMGrvJmOjY0EHLKCIBhD1IRsGOxeQkEFOLz80QSGXBV0NnZQonHidcv
      Mzcyi+oO09yxkVqfRGJlnogRoqOjhRKPFQEnJbWlhAJBbPkoi0srpFULpR072FrrRxYFRFHC
      XVSGW7lVWMlBKOjB4S+jplhiaXaWaFLFXlRJQ0MjVcVBvG4rAnaK6hvwZyaYWpEoqmunpSqA
      5X2VSTKd5fTg4uf1Ddw3wVwl0rQW5pZW+PNXrz/oYtzTOu28Mpk+G2YATAXNbAKZ1kQylQJR
      ufcTHzCzF8i0JkRBwG57+ANgNoFMBc0MgKmgmU0g05rI5jXODU8/6GLckxkA05rI5jVevTj+
      oItxT2YT6AHIRKY5+/YrnB+O8v4uuMTQMX794gXmH0jJCo8ZgAdAzSYYv3KWS73DLGt3/iVH
      37HXudI/TfJBFa7AmAH43OmoagpQSWXizM9m3/3TymW69RqqtGVi8QdWwIJiXgN87nR0LYPk
      LqfU6SAxP0GitB6XoDF68iqluzpJvnQZNW+gZSPcvHCMw8cuMRnN46zqYltghNTmf8XjriEu
      njjIYEJiemQGIbiJL3/nGTrLPBipRfpOHuLQ6essZ62UbazDHguy57ldNJc5Weg5wm8OnWB8
      RcBTXYHfUkbX1i42bQyjLfbz2s9/Q/dkAsEVZuPuJ3l8TzOpi6/Ru7JM/4VZar/5Tym58Ne8
      OqzQuvs5nj3QRkBZk0HIa84MwANg6CAIAeoqLGTSURYiKg7bAGcma9izN0RvIE0mnWZ8pJue
      ORtP/MF/T0PQQmz4OH//s/OENwNkWY6mcbd8g//mh/XYJt/m570ztAYdRC79llPLzXz/X32X
      YinF2MXD/OZ0lDSgzh7jhaNJ9v3wf+Sfh2WWB85w8K1hYgCZIV79xWlc277O7z/vRMhFGb5x
      kwsXZKqNGH3dY4Qe+z5P1kc59HoL3/nD7ViXpplf1giUrM9DaX2Wel3TyKtpclkXvuowy93X
      iSzOYlm4SrptL8WSFbszQToeZykrUVTdSkOxEwnwNx7gqa6z9AAgE6qsJ7ixEZ9FBL+fbCyO
      rmnMTi7S+ug/pcwB4KV+2xbaxm9iA1aGruPe94dsKrMCUNzUSvvkrSECMyMMppN4Lh5l5Hcn
      dBsVvjoyqo3avV/m0a3VOCxZ2jZeZaB/lub6KioC6/cwWr8lX88MCVl2YnOHqPNrnJvuoe+G
      QMfX/YiCisNpZUEVcMgG88szLMRDFDtlssujDE5noBFAQlFsWN93I74ggNvrZHh4lGigEo+U
      JzI5xVwsQRlg8wfJDg+x0NpC0GqQXl5kfimKrxhwB6gob2P3U7upC9rRMyvMzi2hO0owBkeJ
      uF1YFAkSC9B0gK3xPi5cOEPa/hU2mzWA6WPRddRcDs3hxC5J+GvL4OXXmXPs5Bm3FVHUsTuc
      JHMSlZXlLC/2cvz1cSRRADQSGQHXR2xeEETK2rczcOYch1+9hISOQYJIevVVzrq9NAyc4uih
      QWRBQJJzzMTACxBsZmfZcbqPHqJXFDB0HRxBGjcWv+c9DS3J0Lnz5AwVzeLDuj4HgwFmAB4A
      BV9pC1vddjyA5K1h6+4nabBV4LVKiNio3HQAt9WFO+Chc5udwOQcsYyO4g1T1tVK3g92uYSG
      dis2263NOmrYvw0sFhmpbCP79noYnVoirUm4ivx0tNso8jshM0FC8BEq9mKXRARipPIGLrsN
      WfTSuHsv0sBNFuN5BIuDYGklFSVuVEsnVsWDTQLR18j2TRnGouAprqR6HQ+KN2+HLjBGZoGe
      kye4MDDOSgas7iIaNm1nW1sNAcdndyCvlxFh6ze6pvsi2EK07X6cio1p8jqIshWny4XdWpiH
      QmHudUETkO0egnbP2r6LADbl4b84MJtApjWRTqex2+93juvPj3krhKmgmQEwFTQzAKaCZl4E
      m9ZEJqfy2yvDD7oY92QGwLQmcqrO2YGHf1jPJ24C5SNDvP3CX/Fnf/oX/PzEKBn10y+Xk52/
      wC//6lf0rnzqTX2mEsOnONEzzPKdS97qGeYGjvOT//Bn/Pn/+xsujUVQ79WPFuvjhcPXyGS1
      ezzx7vLjZ/j5kSssJ/NgaMTmzvPy37zA1dtTby728uKbF5mNZj4wwuyu9Bzzo2d54+zUfZXn
      i+QTBiDDZP8URriL7/7wOQLj3QzEPslCWHdnCXbw/D/5Ms3uT72pz5SeiRFLZrgz4/lElNnJ
      WcIHfsA3uzzMTE2ylLzHga2mWIqm0O+zx1l2WciMzbKUyWHoGqnhXs6MjTM8sYiBQWJhgoRm
      gPgx+90NnXwmTiSeu6/yfJF84iaQICookhV7oJYn/3EDgiCAYaBredLJBJm8jiFI2BwuHDYZ
      MZ8kmpeQ1QyaaEURQbE7UEQAjfRKEpx20HQQwdBVsukkqUwe3RCQLA7cLhuyCIamkUklSGVV
      DEHEYnfitFkQRYE752TW1TzpVJJMTsMQZew2GVW34HXK5PMZ0hkNtBw5TcDicOG0K4iAoWVJ
      xlNkNR1RtqLm9Q+cUQVAkmWsdg9lGw5QLd1+b4N8OkEilUUzBGSLBUmSsSgWrHe8XtdypOKJ
      1ZpTlLE5HDisCiIqqViclCpgc3lwWqXf7ZMQKKcmd43JRI5ql8H09Bw1m7chjo6wvMnHymwM
      v6cGm1UBwyCXjpNM51bLYbXjcNhQJI10PI8o5khldG5H1jA0cukMmqBgtSmIhkoyFn+3fHYH
      DpsFPZsib+jk0nkkpwc5FyOZY/U7sFsQ1+d4mE8aABvlDUUMn+3n0nno2NREscsCWo7FkSuc
      O3uBwbkUhsVHbftWdmxpJTx+kL84q1CTnkaubqeEFOHtT9BeYsVIjXDoZ2ep+Ooeoi9fou6f
      P0dwZpCL585zfWyJtC7iKm5m35OP0lZkZWW6n/Nnz3B9LEpedFDWupntWzupCdhu3S0Jej7N
      7M3LnD17hbGFBJrFR3UFDKS382/+UR1jvUd4/dQSbiHGQkYk1LSLp/ZvosSRZ/zKCU6cu8Fs
      UsXqr6TWHSMdrn7vB+byESopZfTKO1xmCxuqinBaJLT4NBeOv82l/hmShoIv6CFvK2Fb5w62
      Fa++1jDyLAxf5vTxboaX02AL0rBxC9u7migyhjn4k0OMqy7qtz7J07tqeXf9iiDlFXHOz6RR
      /YtMLTSy9akSor03mV0uJ7pgw9PqwqpAfmWcM0eP0DO0SMaQcBbX07VrFx21Sd766Xk02xgD
      2U6eelQAPU9icZSe7huoxa10tZWSnerj5NunuLmUQbD7qdmwlR1bmsn3vsHFmVlGbqq0f/1r
      2I7/jLMxF7Xtu3hkXycltvWZgE9cAyjBRvbtUTh37Dynzuo8sq8NZ3qKC28dZ7G8i52NLkQ9
      yXTvaU44fXzZahAdHcf77Dd5usPG9QsXmRkZpy5URexiN/MNW3jSI3IayMfnuNF7jWzpPr7/
      XA1eOc/84DmuzqdocsXpO/EWN6UWuvZ0YCHH8s1LvNnt45882ozLKgA6qfkxrl+fxr/jGzzT
      GEJJzXLx0C/ovt38yOQw5CBbvvYdWooMel56g5FoLf7MEG+dWaHrq7/Hd8ucqMsjnDn8CnOJ
      9zXxRBvhhk62C5c5e/UsqrqDzQ1+5k++Tq+wje/8i+/iFzJMXzvJK90R7mxk6Okx3nn5BGrr
      Dna32xDyCcb6u7nocLCvaJ45zya+8Xgr+Yl5Yjp3BEAmXBZgenSRpH+U2VAr+wNOel0CC4Pj
      RBQ7tS4nFjHHyLFDDDn38Z3/upmglGS85xRn+q8T8pVAfJQbRjPf+t4ebFPvcGF+mJ4rFsSy
      Nrpaq3Cnr/HSS6ewtHSwe+Nq+SZH+zjfLVMvpRgfS1G9/9vsq85w+LUKHv3qbkL5GKmkDraH
      /7aHu7mv3wEUbw27nnyE8OIleuZy5NV55ucV5Mwik+OjjE8uoPpCeBQZESju/BLP7KjC4QxQ
      Vx7CiE0xPtzH6TEL29vLUW6dvTOJNHkUalrq8VklBMlGScsjPNERQs3FmZ/JoAgxZibGGJuY
      IW4pIuSQEIXbDRWNZDyDaCmisaEEuyQhu8vZsbMNt3TrDGX3Ud7YRlPYiSS58LgzJFMa+swY
      Kw272FzhRhZFbKFaGmpL8dvv0m6XbBQ3bmFvW4DZiXGWYitMjIhs2ttC0CIjKi4q6ptpqinm
      ztkxjfg4Y2k3SnKOibExxqeXEDwuXDY7YlEb+yp0RodHiTtL8L3v1OQur0SeGOfa1UHcTdW4
      XF48Li8r/b1ErQoOpwOJBBMjMp37NlBklxAtHmpam/A5ZbKJDDjrefJrB6hziaCmmBm+wYxa
      RGtrNW5ZgIVJphUXxOeYGB1jfGoJXXHi99kwdBs1Ow6wf2M5dqWCjh1BoqNTRPMOvO71efDD
      J6wB9PQiw2MLCN5yqoocuKUEs0mQvUWU1xfj2f4UmyvdiNklBnsnUSq8yHMCdn8Au7j6dr6K
      aoKjZ7l0+Cq5DQeo9TsQjCgAVruVtJ5jfHicyo0VuOQ8y6NXGcjXsaXMTbi6AueGR9jXVISi
      Jpi4fp1EqBhFvv0FSNidVvT8EiOjCwRqAijZRa5dHiKpl9zaYwnZauH907YKoTLcZy7TNxug
      uchGPjbB0Og0EXfju08yNJKRKUZGUoQ3NOCwyeRyWfJ5hdIKg5MXB6nf2YxfzjI/PsLo1BKt
      ZXe8h7OM6tIIzXuepT1sR08tMDiwgL3YRXZ2FFvbNpoXuzl26iKhpi9TY7mjgMFK6nNnOT3m
      5bmnnSDnCbqsXFqcIl+6EZdz9cmlFRoXLwxRs6UWn5xlfmySVAYsDitYvfhv3/Is2QhVVBOQ
      Fui/PsaGpko8/hIqnTla9x6grdSBnlxidGwazRPElrLgcTtQZBEjMsKCr4vOwDAXe69gBKoJ
      lD38E+HezScKgCApiOk5us+f5khGR/K0sL9UweYopaU9xNljL9KTyYNowVXSxK56+QNVjGAL
      0ljp4ep4MRuqwzitEkZm9W8WbxF1TQ1095zghctJ8rqAxRWmfU8zit1JXUctp88f4mcns2iG
      jC1YxZawfMcFsIiruIL6ugW6zx7kp0dyGJIDv1vExkcTQx3sazlG92u/4GROQ7Q4cOgCSvGd
      R6GAJAqkZi9z8PIJ8oaNso4d+L0eHLv3UXHyHP/wdydQBQm7XSQtBt7zAYvOGnZ2jHP6zV9y
      PpPHkKz4ylvYXqNgteW48cZLzKZyOIs243r/ByeVUFm6wpncHhrcAAr+gAu7O4Rg9+C0iYCN
      mn37GD9xmpf+7giqIGJxFdO4aQvhQJb33J0v2QhUVNLVLnL96lVOJ1Ns3VjPI5sinHjzl5zL
      qLfK18jmLZb3LitmsbLU/TJXYhq2knoa77LY3nrxCe8GNcin40SWIySyBlZvEWG/A0kALZ8i
      urjISloFyYLLFyTgsSNnlpjOeynzvnuGMHIJFuMqLrcbm0XC0LPE5hPYwgEsao5EdJlIPIVq
      iFgcfkqKvFgk0PJZ4suLRJJZdGTs3iAhnxNFem8vkJZLEV1aJpbKYUhWPF4rWdVBechGOhUn
      rdkJeFb7ZjLRBTJWLx6bgp6LszS/TCKnISoO3HYRrG68Tge37+w1dJV0bImlSBJVchAIBXDb
      LYiCQXplnoWlBHlErA4HimLF6XDiUrLMRg2KAk5QUywvLBLPaCBZcfsD+N12ZDIsTc8RzQu4
      /CUU+WwfOHmkl8ZZMEJUhRyrZcmniUTi6DY3fo8dCTAMnXR0jsVIarUcTh8Bvxe7JUdkLoMj
      6MEqQT4TI5a1EfLIpGJREroFr8eFhQwLs/Mkstrq9+gN4Pc60RPLpCU7LrsdSVCJzU2xlAK7
      J0Aw4P7AGmHrZUCMeTu0aU2slwCs37rLZPoMmPcCmdaEJAqUB5wPuhj3ZDaBTGvCHBFmMq0D
      ZgBMBc0MgKmgmRfBpjWRyqr8+Hjfgy7GPZkBMK0JVdMZmo096GLck9kEWhdU5i8f5P/+3/4n
      /u3/+p94ZzSBDpCe4uSpU1weWPqE28uzOHOR11+8zH0fotk4ExcO8nLPQzaM7xMya4B1YYbu
      KyKP/cG/ptYY4p0z11mp2Ybf0FE1DU3/5D3Zhq6hfqrBfKuDoPL38d4PEzMA64IVj0ckHokh
      NXby3NcEUDNEF2aZnZnBng9QV+VBScyT9ZQStEmrg10ScbKGg6DXSi6xzPz8EvGshmxbvX/r
      NiOfYnlhnqVYGhURh7+MimI3spYhFo+yklTJpxJksRIsLSPktJBaGGNkeoklxxRzKzZKvPe6
      3fDhZAZgXQixsdPH2z2XOJtI09nZgDefYmFyhNGREeQVN81tlWinX2Wq6wc8WeUANc7I0BVm
      1Sb2t0Dv5UsMjC2R0QQsTicOt0iOKtCSzI8PcvXaILPRFCoSntI6Ui0bafWucOPsm5wYlyiy
      6miSjLt8C0/sqScxdZ1rN6dZ9Awx0VhmBsC0lkTctdt50trL6etRRnu7KW7ponHzLnbqpbiK
      Wmku8dCPwe/G7xsGGICgsXBjgPGUm83P7Kch6ECNT3D2yGEGqSIfnWRoIoJ/wxPsq/ViEXQS
      i0PcjOYxvGAYCsGaDp7e20pQnuWNn1xmdkctTZ3P8GUULlgfZWud7wF+Np+OeRG8DmRm+zjX
      M0rav4FdXV4mzvSyeJfZaHw+heGBSdKaTiYRJbIYQXE5ESXQVA1NMwADTVXJJZPkAEEU0DJJ
      EskUqgGGliM2N0fMEBEBxVtEZU0NRQ4Z0eLElU+T/ALdPWPWAOuA7HBhTJ3lxVOHyGOlfOMB
      amxA5r3PC3XsofrQcf7m/zm8OmyzfhO7K30EhQ6aM+e5dPCnvJPNI1mdOIJhfDmQPZU0161w
      4dJhfnIqRd4QcYfq2fqYDUg8iN39XJk3w60HhkYmHmE5lkITLHhCxXitIug54qkckmzDYZPB
      UElFllhKZEGy4PT48bqsSIKBmo4TicZI51enfHG4HYiqhNvvQFAzxFeixFM5dEPE6vIT9DuR
      9RypdAZNduK2SYBKYiGOGPTi4Nb0K4Lr3WGWd1gv4wHMAJjWxHoJgHkNYCpo5jWAaU1IokB1
      0Uct6PpwMJtApjVhDogxmdYBMwCmgmYGwFTQzItg05pIZvL8zTvmEkmmAqXpBqML8QddjHsq
      yCZQamqAixfOMRJTud0HZmgqw4f/I68N3evVeeb6r3Ds0BnmWKb7pR/xi7dvEMt+9p1pi9fP
      c/zUSabuWKJJzcxz9Ef/O3/8x/8Lf/mrY4zG1Y+3LNJHSI+f42c/fomL48uon3Jb601h1gB6
      grG+HsZyQYJbanBbVyf+NAyde3cKG6v/DAMI0PW1f0bXGhXTMG6/z7vU5asMWJ/mX/8PFYzf
      uMnSVJTyltAHZrv+JOxV2/neDz5dWderwgwAECxxMr08x40RJ+31xdjurAsNnWwywvzsHNGU
      imDxUOoXWJGKKXdEmbo5ytS8hnt6GUXOotm9+J0OhPwKM+NTRNIqguIgUBKmyOdCUaOMLWSx
      56LMx7OIdh/hinICdgmMHPHFOWYWomTyYPMW4bdlwVN913ILFi9uOUY066J5887fDWwxtBQL
      k1MsrKTRRAVPsJSysA8xtUwklSEdS6LZ7OgpmbKGEuyCAFqGSCRG3hDIGxJ+jweHTSA+N8Hk
      Qoy8LmL1BAmHi/HYJAQ9S2RmipnlBCoyDl8R5WUh7NL6XB0GCjgAoqOUjnAx8dkhbjjstJc5
      bv3FIBef50bPRQYmV8hpOjoKw9lRbtb8kP9i0xJTo+NMxSS8sxGk5R4WSzvZ2RRk4sxRLk8l
      0HQDA7D4qtm8rZM6ZYhDL1/F67RgyIDsZikBWzaXkZ+8waWeAWZXsmi6gShJ6KkFSg78Szbd
      pdyKr4Wu8JtcPHeRupYNNFcHsJBieqCP/oFRFpJZdMmCOxgjlW+iXO3n5LlLDM9ZqNvahnql
      nwXfD9lZJJGJTNF7oQ8hGGJ2yWBLRztF2iAnLgyzksmh6QKSxU1laycdzWFyU/1c6xtmOppG
      R8bhKyWdbaChvhT7Os1AwQYAQPbXs8mZ5UL/FYYcW241I3IsTY8xuajQ/vhXaQzaUGPT9Lw2
      wk1E3MEmtj+u4h1J09JVT+ZoD4sAi1c5Oijy6Fe+SmPIRj42y5XT3UxMTFFcDaSgaP+TPNoU
      IjE1SM+Va8w12lm4MUHW18JT+5vx22B5+DxvH5n+0DKLspO67fuRrp7nWl8PkmUrLc5xTh09
      zZzkJ1zkQjbyLA93M7eY5bFOmXQSwhv3sK+rEZwjvHBsmI6vVrA4PUlE97O1ys/C0jIQofdo
      H9rGx3i+rRyHoLIyN8VSRsDIznP56Al6Uw5KS/zYBI3EzDVOL0SwFn+FJs/n8Y199go6ACBg
      L2uhI3eVc2cuYDMA8qSzKhZbKaVFTiRA8lWysSnMiZWPOM1F5lgJd9JSvDohrOQrpTrsoT+f
      IqsB4Sa2VPuRRRFZsaHIabLJBFHNSWlJGJ9jdaEPb3kbjeXdLHxEmWWrh5qNW8hevMz8yBSV
      1VGSvgrqi0J47avXM8UllTj9pTjEKfw17dRubCRgVxBaD1Bz6VXODx1AGZ/GXfclih1zt7a9
      wvSCj87WUpyyCFjwldXiA4j3sSiV0FwfwuOy3HqPUqyeIgLr+CgqyF6g95LwVm+gs0lidCAC
      2PA4LaRWbnB9eImcrpKavcabp4fgo/pbyuooGTrKyZEoeU0jszhM39gSquTFqQAWCxbhfQGy
      BgjLUQYHbzC1kkXXcsz1v8OZ/uSHvEme0RO/4ehgDB2NfC5HOqdiBMOUGipKqIauHTvZ0dlC
      yJIiklWwy2Cx2bAoyuoiItYwm7e4uXDwMDezlWyo995xFiymvnyCo8cGieZ1dDXN3I1uznf3
      sSAWU+XMkXVX0LF1Jzu3bqTcDYmogdXxIcVdB9Zxdj9DgoVQXRcHnlphXJTwV7SwKRHjxGv/
      H28upjFcleyqLgE+ogZwbeDZZ+McPvhXvLWURnIV0bxlL3ubK7Hnlu/+GslNyyCQtEEAABHR
      SURBVLYu8qeO8+u/fItoGvxVG6ir+LD2hEyopoJzr/wn/nRRJdi4jf0H6nHZZHbvi/P2W7/h
      /3xpGVV2Ut66k/37Q8iR0ffvLL6aXXSEXkLdsIkiq8C7S1k6aX36eTJHD/PXf/ZLkpqMr6KN
      3fsfwWv3sXnfVk4dOcJ/fOunZHQrofpN7H+8k3V8/Bfm3aCGvjqXjiDKSLfqQMMwwNDQkZEE
      A13XUFV1dc4dQUKRQBNkrLKArunouoGoyKDm0QUJSRTB0Mjn87deIyLLMrIkIaCRU0GRRQRB
      wNB1NE1DkBUkDDQtT17VMAwQJBlZMECyIBoqugGiJP9uIWrD0FBzeVR99XFFkRAFYfXxfB5V
      MwABUZZRZBnBUFfXIH/PNnQ0NQ+SBVkUVsutGkiShCiApt4qDyCIMooiry5Gbui33kPHQECU
      pNW/vb9mY/0MiCnIGkAQJeT3Nf4EQQBBZrUFLSBKMhbpvR/P7f+JkoR4e2FKWXm3HSlIWKx3
      WzJUwnJHR70gisji7VcJSLIF6a7fxF0WGRQkFKv0wVUuBQnF8sHHEeS77KuIrNyxfr0godzx
      QkmxIN3thwVBRLZYv1AHjXkNYCpoX6Qwmx4iiiyypS70oItxTwV5DWBae+aIMJNpHTADYCpo
      ZgBMBc28CDatiXg6z//xirlEkul9DF0jl0kj2FxYbte/aoZEXsJhu/uPSp83NRMnkVdwuyzo
      2TSpjIbF4cBmkT/qt/D3MAyDROZTrcDxuTCbQJ+zXGKFy2+8QN+daxNNnOIXJ4eIZ+4y5fMD
      EO07zIuHr5NUY9y8eIgf/e0rXBr5Yo4WM2sA0weEur7B73cBsUmGcNHx9JPsbHJ/7LP/emIG
      4CGja1kWR/sYHF8mYyh4SmtorCnDa5dZHrxMsnQjVS4JtDTzC0tkRT9lzgQD14eYTVuo6+ik
      2iORic8z3D/IbDyHYPVT3dRAZcjK/NUe8nVbqXFDZmWO4fE5XGVNVAXtGLExLs3a2RBOc2PW
      SrU8zsD1IaJ+D9X+dqqKJBYG+xmajpAzFLzhGpobK3Er6zcaZgA+dzqp5TEuvvoCQ7dvx1kZ
      ZzkQBCA6cIK3r0Zxul1YSDHWc45oegs72qqZv3KCKeeG1QCoCaYmhliRmnFartE3voLVKnGx
      J0jxNi83L19iKi0hCAJCdoWRq/2IXQ1kh09yKt/I73XZWJzq5djhIWr3eikOVhLtPUtvfisN
      1iFO9YSp3nx7XLKOQZbZ/iGGplbIGQKCYBCdnWBA12luq8G1TjNgBuBzJyBbnRSXV1PtvPXQ
      QoJpXQQSDJy5iX/f19lbHcQmZImMdPPW0CzRyvCHblGSBVTdTk3zBjyKi8zcVd4+fIp0URk+
      uwxahqXZFeZdpTy7dQOpV/tY3NDISmQFe1E5cmaeSMLK9RGJ5keDSMZNEC34iqpoaUsQDXVQ
      71nitVdOc2kJ/D4XsqCTjq9geOqwl9ewwf+5fHifOTMAnzsBizNEQ+c2Om8vrTUSp+emDGSJ
      xxTClUU4FAA7wXAI5eYSWl4FDH63KuntO1gEAXftVh6xTjDce4qh4kd5qiiLpX4/T++pvKPd
      LuAMFeHyOGky/obzg2E8SxY6d9WwOBVl+vJFZn01HPA6EO+29K+aIuZu5vHNVQQ8795Jqtjd
      BJ13ef46YfYCPVR81DUkOP7bC8wkVbRshOvnekjrElaXnXCpne4z14nnNWKLM8xOzWPxGvRf
      GmRFCNHWFmKqZ4S8r4YybZgZsZjaulrKvXkGL4+wnMlgSH7ami2cPnOaObGWpuow3nySvjPD
      OMsDuOwfck50ltNgmWc4LlFSVU9dZRFERum9toBu+Xw/pc+SWQN83gQRxWJDvrPNLCmrfeyC
      RPXjP2DP27/ib//9r1nBTsWmR3nmwCbCbglhxzd5/MUf82f/9u8RPJVsO/BlOqvDiJYpfvMP
      /5lrczKbv/kHFPnc7Nkf4dDB/4v/eTqJ6Klk1zPPURPyICHg37yH1ktHcTc3YZNlqosFuosr
      2VIcxCEJ5EQLdqsEgoSsWLBIAogeNj/zFPnXDvIf/t3fkTTsVG7cy3PPbmCdjocHzLtBTWtk
      vYwIM5tApoJmBsBU0MwmkGlNRGMJLoxEH3Qx7skMgGlNmCPCTKZ1wAyAqaCZvwOY1oRhGGTz
      2oMuxj2ZATCtiXg6z5+/0POgi3FPnyoARj7F0vw8kUQGzVi9ycsXDOJz2T8wG9lH0bU0i2OT
      pCxBwhVu8pEkhmzD5batTRstnyKSzCHb3Lhtd5vJ7SNLSy6ZJJnRcQa9fNRdANl4hJQh4XR5
      3h399bFopJMJ0hkZb9B5a7a6PJHJceYT+dUpekULbn8xJUWu+/4S9VySeDKD5AziWse3M3wa
      9x0AI7vIwOUero3OkkhnVwNgc+EP19LW1kxVsYuPe2jl44O88fJJ3G17cVeUMd7TR95dw6au
      Sqz3fvknF5ugp28Od81Wuio/6dSuKssTN7kxkqblS7so+YhnRoZ66M+72LBpC8WfaEeyzE9c
      Z2jEzY4vteG69dhcfzenR+eYHlrC3dZOe9t2gp8iALnIBNf7R7C3fIlNH7UjX2D3+dmlmeo5
      R/cYNO54mk2VQWRBIxOfZ2xsCS2fR4ePHQA9Pke88lG+93gLAhHG769QX3AuWp74NvXpSd75
      0TnqfvAN6h90kb4A7i8AiUkujsKGXbtpr/DeWqdKwu4tpaWjFIDURDdX004yN3oxNj7HtlCc
      wSvn6Z9cQbMGaaxwEXPUsLUeug9fYXJmjDeOJCkLRzl/voeUZQEl7KKtzH+rmWGgZRNMD1zm
      8sA0Sc1KSVMllqidlh2NOFMDnLqewZOcYDiq4a/bSFd7PUG7BNoKA2fPcGU8AjY/tcUOMga4
      79glQ9cYv/AWCzYfiWWBhi2bcUf6udR7g9mVPJKrhM37HqHBd+cHoZOYG+TKpetMRtPI7jLq
      G3zk9RIaXEtcOH+B/pRCQillf1sZlsQAx09cYT6lo3hKad24iaYKL7KgE5vs5cLFAebSBt7S
      Uvyuj9FmykUYHJsjtTDLTN7L5q4NBPKTnD7dzXTcwOYvocQTIFgaoqKmFFt2gf7zF+mdiCI4
      ApQXufndKGQ9wcTVS1wenCahSvgrWtm2vZXgJ2u7rTv3t3cri8Q9YUo8jg+dxSC7MMTRgy9y
      YlrBb8swcOZ1rkacVDc2UVskM3b5JGevTZFR7YRrinEHK6itDlMUKiFcWkp5eZigy/a7WsRQ
      M8z1n+FkXxxfdSONtUXkhy9y5Ox1lvMquchNzr19mjGhmIbGSqS5Scan5siQYuDIq5ybl6hs
      aqG+wkN8bojh8dh7ymvoOhOXD/HbNy+yJHsx5ge5NjKNFKyhuaWFhgoXM6ePcTN1xz7OXufk
      2X5WbMU0NDdT6U5y8c3DXByPY3MHCZeGCZeXUxp0oWSHOHZ8DEtpHc0tTdSVKMxNDDE6nSA9
      fp7Dp4fI+atoaW4gKCcYutJP5F7fg5pg+tpJXj3Sw4phwZIf4Y1XzpDw1NLYXE+xJcb1Uyfp
      GVsmpy9x5Y0j9ERt1DU3U1/mJjnVy42pLJBlsvcKQ8sGJbVNtDTXE5Rj9J/vI/JwjNNfM/dX
      A9hsWAyde60pKgc38cSTe6l2TPDWiI+u7+6k3mVBUDPU2FaYn1MANxWNpfhWKmlurAQcVFas
      kHdXUuKx/y4A+UyamfEJwlu+zY5aF4qgkqq2MD27sJpiQcZV3MquvdsotYtM5t5hOLZManmJ
      01MBHvvKLir8DkQ9z7JbZen6B3+mFy0Oqrc8xeNbg8yeeZ2Tr18ibndhk0UMPU86pdFe1sFj
      VoAsszfnEINVdGxup8QuY2SiuIUYJ1Midl+YiooKEnkXlSUeMn2vcORkL7LbhVUSMLQsibSX
      Lc/KRFdmcDV2sKO1Fq9FRE3OIqZSjH6caRhEF/VdnTy2tQlx8JfMhHfwne11uCygZiuxpS6w
      JAJzA1xRy3ls72aqQg7Qcsw7c6T6ZyE9w7WLZzk5GEF22JBFULNpRE8t1oZ2tn6Brw/uLwD+
      Csojr9MzVc5j7hIUUeBuyweFm9qpDbkhkyOvOfG4LKsHq2zD63aiLH38CsjQDVRVx+Fxoaxu
      BIfXjVOJrI56kiRs4XLCjtWlgCTp1lhWNUcKF4HbPUqigt3hxGb54LAni7WIxg21eG0xJpUw
      2576Hi2bq7D97hkCFoeN2DCATi6rY/XZcVhX58sRLE58Pidi6gObRs2kqH/+X/CNjXcOnxKx
      2DVuHBzB4XFiX90xZIsdl8uG8HFupfGFqSuqosipsJJJI3gCuCyrtbJsdeByOYiJQD5D1uLH
      57Tc+rws2Bxu7PIs6HmyRZv51q5GqsKud/dWkrGv5+VfPob7awKJRex6ZiMLb/6KXx7rZWZh
      meWlBSYHz3PwhZc51jNFFhAlEQEBq1JLZVEvb7x+hcmFRWZudvPa2xeYXb7LkfIhLHYrxWE/
      Vw4fpm9ygYWZIU6/eoQrC9F356sRxA/ukLeFnbZL/OLwJSYWllmY7Ofs6VP0jrx/HS5h9fWi
      iICX8mKFSGSIm9Nx8lqe1PxVXv7ZW0yqt5t8dirr3czd6OHs5ZvMLy0y2X+Kf3itm7vtVaBt
      O/L5N+hdyqKqOVYmezl64hQ3ZhWa2p30HzvNhRtTLC/NMdR7nmPHr5L4OB+MICIKAqIA/vZt
      KKd/zZs9EywszTN8+QwnTl9mOgtUtNK6cI5XTvUxt7jM/Ph1zp98iyvTgLOCDY5Frg6NspjM
      o2UTjF89yqHDN0i+rydDyySIxjPoho6aTZFIpFHXcTPpvrtBRf8mvvPPXBx/4yg//9Gr5FFw
      FdXSuXMnmxvL0G4GCWoWRAFkm4eOx7+OdvR1Xvzb18k7Sulq3EijuxhZFBCtXkoCt2+cknF6
      3KgOy3vmoREUJ1Wd+3lEO8o7L/4tK3kH1Vub2d7gxCWJSFYfxf53z9UWlxeP4EAWXWz+1j/G
      +O1BXvjRW2iKn4aGerZtL8F55wWeAM5gGF1e/Y+/fgu7c+d55+SLnFrOInur2fe1r9DkEFm2
      OfH4ZNzVrTyFxNG3X+fHbyZQAvVsOrCfrLZaDsXpwaPaUQTAs4lvfjvDK6/+lFMxDWughm17
      HmVDpQureIBvCCd5461fcSKu4gnXUPvoEwR0xwd60gTRgrcksForiVY8bjd2+63lXNyb+O73
      BF4++Gt+9LqGs6SG6vYtlJbYkcQwe7/zLJbX3+Sn//kQhj1IbW0Xe1scOBU7DXsfJ3vybd78
      1WlWcgpFjVt48unNvH+se7z/MH8/VMX3v95GcugMpwZt7HhmN+U21iXzblDTmjBHhJlM64AZ
      AFNBM5tApjURiye5uZh+0MW4JzMApjWxXkaEmbdDm9aEYRik0w9/DWAGwLQmBEHAZnu4+0Yz
      mYwZANPaER6C1W7uxewFMhU0MwCmgmYGwLQmZPnhb13Lsmx2g5oKm1kDmAqaGQBTQXv4G2qm
      dczA0A00TUUzQBAlZElcXbjvgZZJQ1V1dMMMgGkNGXqepZHLHDn0JtcWdHz123j2yT00lDiR
      HtBvBIaaZuLSW/z2nUtMxw3zIti0Vgyy0WkuvvMWy5VPcKDDzdTx17igbeCZva347NIDqQUy
      oyd58VySTY/soiVoXgOY1oxOJh0jlSuivb0Mh+KmcVsbLC4ST2cfWKkyupON2zuoDbmRZKfZ
      BDKtFZ28kSJnBPHenhXPHaJUmiOHjgEPpAbw1XVye2onQ0uaNYBpbb33IF+9KH4o6HEGT5w0
      A2BaKyKK4EARFolmbj0UX2RGl7AgPsBeIIAcU+ePcDUfNgNgWisiDocXjzNCz9VJUrkYN872
      ooUCuOxrMuXxx5Rj6tybdGer2bW9zewFMq0dQ88THb/Cmwd/S/e0RrB1L199ejf1RR8+peba
      0ondOMJPX3id64s6NsW8F8hU4MwmkKmgmQEwFTQzAKaCZgbAVNDMAJgKmhkAU0EzA2AqaGYA
      TAXNDICpoJkBMBU0MwCmgmYGwFTQzACYCpoZAFNBMwNgKmhmAEwFzQyAqaCZATAVNDMApoJm
      BsBU0MwAmAqaGQBTQTMDYCpoZgBMBe3/B8FAAhjCk06CAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Tackling the Brain Drain' width='192'>
      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
      jAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Where Singaporeans Actually Migrated To' width='192'>
      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
      SiiafM9itZapk0nGNn9ubD51xuXx4HFqyEaKRCpNMq1jZtJkUXF6vLhsJql4jETaRHF68Hnc
      2G3iYdpPy+MJQHyBsc7z/HJQJi86xUJaIVh9gK+dPsW+4Aq93aMsJVyUWv1cutjLullMOuTl
      xZPlGMOdtN7oZHBmg6ziobTpMMeOHWRPoRcluchQ53VudA0yt64j+8o4sNfJerrkwXX5qcu8
      HX+RP/q9A5T47J/W74bf5b9Mn+Lvv1LGwFv/ng5/HfHBcVbTFr6yY3zjey/R4JMxYgsM3LjI
      xa4RVpIWTk+Igko/Gxzmz75TS2p1it4bV7jWO8FaWsFfVEFpYRFOEzB1UpFp7rRfo7VnlJUk
      aN5i6g8+z4kjdRQmhmjvuE37SBxlY5F1y0NZ82EaCwzm7txiYDaBrfQgL750gv0VQTTRQf1U
      PLYqUCaaIJnJ59Dv/T1aCtKMdd9hrHuQ8jN5my9wFNNyohLJUc1KMp8jL9ZiDlzjUt8M1Jzh
      u2cCaFaKlaFOenvsqNo+tDuX6Vpws//bf8oPynzI8XGuf/AeK2veBzc67T6KvAYb8QyFHg1J
      lh5wJl2mf+wof/Pv/Dn1Xljv+t/8j2tLNLwSItLzAe+NlPDtP/lzagMS8dkezr3zPtMFhzGT
      a8x0X6J1tZrf+Vt/g0qfRWy2n6vvXWRMaqQxtcRYfwc9K8V8/Q+/y56QxPp4F1fbumm77eKV
      WkhE4sjhJr71B39EWbafj9+/yPXFak6/8ie8XpjhztkLLExPslIcpNj+uP4ywqP8VgGQtnpR
      JD5dCk+1bY5NUQMFVPif42CJCxkJl+JAS0eJkveQvaVYml9gdqCX+cEx+j7zE7k0j8bEJIuL
      fmrqG2ioDGIH8O3h5OF6OjscD74ClD3P6fxxOm4PoB1qoirsQvlcCDwcfv0V6n0qEhauwnzi
      vUsYhp+Z0XmaX/9jGraW//EV1XHypQXmeiGTSrO6kmDfi6ep2VqywV9aRfPxVRJXs2Si6yQz
      BsXHTtKQvzkeO29PCy0RifGVeSK40YqqqMvfy56AHSigIFCH5iynqsKPQ4b8fCcbqrE5VVN4
      Kr5YACQZWdXQEhEiSZ2gHVLxKJG1DOFGLxBFVW24NNdvcWtZQbMXUHf8dV4+doRqr4ZkZkms
      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
    </thumbnail>
  </thumbnails>
</workbook>
